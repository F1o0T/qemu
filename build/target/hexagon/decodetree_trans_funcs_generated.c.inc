/* DO NOT MODIFY - This file is generated by ../target/hexagon/gen_trans_funcs.py */

static bool trans_J2_jump(DisasContext *ctx, arg_J2_jump *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jump;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumpr(DisasContext *ctx, arg_J2_jumpr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumpr;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_J2_jumprh(DisasContext *ctx, arg_J2_jumprh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprh;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_J2_jumpt(DisasContext *ctx, arg_J2_jumpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumpt;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumpf(DisasContext *ctx, arg_J2_jumpf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumpf;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumptpt(DisasContext *ctx, arg_J2_jumptpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumptpt;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumpfpt(DisasContext *ctx, arg_J2_jumpfpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumpfpt;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprt(DisasContext *ctx, arg_J2_jumprt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_jumprf(DisasContext *ctx, arg_J2_jumprf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_jumprtpt(DisasContext *ctx, arg_J2_jumprtpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprtpt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_jumprfpt(DisasContext *ctx, arg_J2_jumprfpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprfpt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_jumptnew(DisasContext *ctx, arg_J2_jumptnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumptnew;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumpfnew(DisasContext *ctx, arg_J2_jumpfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumpfnew;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumptnewpt(DisasContext *ctx, arg_J2_jumptnewpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumptnewpt;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumpfnewpt(DisasContext *ctx, arg_J2_jumpfnewpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumpfnewpt;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprtnew(DisasContext *ctx, arg_J2_jumprtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_jumprfnew(DisasContext *ctx, arg_J2_jumprfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_jumprtnewpt(DisasContext *ctx, arg_J2_jumprtnewpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprtnewpt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_jumprfnewpt(DisasContext *ctx, arg_J2_jumprfnewpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprfnewpt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J4_hintjumpr(DisasContext *ctx, arg_J4_hintjumpr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_hintjumpr;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_J2_jumprz(DisasContext *ctx, arg_J2_jumprz *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprz;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprnz(DisasContext *ctx, arg_J2_jumprnz *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprnz;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprzpt(DisasContext *ctx, arg_J2_jumprzpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprzpt;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprnzpt(DisasContext *ctx, arg_J2_jumprnzpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprnzpt;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprgtez(DisasContext *ctx, arg_J2_jumprgtez *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprgtez;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprgtezpt(DisasContext *ctx, arg_J2_jumprgtezpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprgtezpt;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprltez(DisasContext *ctx, arg_J2_jumprltez *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprltez;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_jumprltezpt(DisasContext *ctx, arg_J2_jumprltezpt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_jumprltezpt;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpeqi_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpeqi_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_tp0_jump_t(DisasContext *ctx, arg_J4_cmpeqi_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_fp0_jump_t(DisasContext *ctx, arg_J4_cmpeqi_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpeqi_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpeqi_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_tp1_jump_t(DisasContext *ctx, arg_J4_cmpeqi_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_fp1_jump_t(DisasContext *ctx, arg_J4_cmpeqi_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpgti_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpgti_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_tp0_jump_t(DisasContext *ctx, arg_J4_cmpgti_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_fp0_jump_t(DisasContext *ctx, arg_J4_cmpgti_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpgti_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpgti_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_tp1_jump_t(DisasContext *ctx, arg_J4_cmpgti_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_fp1_jump_t(DisasContext *ctx, arg_J4_cmpgti_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpgtui_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpgtui_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_tp0_jump_t(DisasContext *ctx, arg_J4_cmpgtui_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_fp0_jump_t(DisasContext *ctx, arg_J4_cmpgtui_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpgtui_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpgtui_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_tp1_jump_t(DisasContext *ctx, arg_J4_cmpgtui_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_fp1_jump_t(DisasContext *ctx, arg_J4_cmpgtui_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpeqn1_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpeqn1_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_tp0_jump_t(DisasContext *ctx, arg_J4_cmpeqn1_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_fp0_jump_t(DisasContext *ctx, arg_J4_cmpeqn1_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpeqn1_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpeqn1_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_tp1_jump_t(DisasContext *ctx, arg_J4_cmpeqn1_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_fp1_jump_t(DisasContext *ctx, arg_J4_cmpeqn1_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpgtn1_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpgtn1_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_tp0_jump_t(DisasContext *ctx, arg_J4_cmpgtn1_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_fp0_jump_t(DisasContext *ctx, arg_J4_cmpgtn1_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpgtn1_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpgtn1_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_tp1_jump_t(DisasContext *ctx, arg_J4_cmpgtn1_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_fp1_jump_t(DisasContext *ctx, arg_J4_cmpgtn1_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_tp0_jump_nt(DisasContext *ctx, arg_J4_tstbit0_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_fp0_jump_nt(DisasContext *ctx, arg_J4_tstbit0_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_tp0_jump_t(DisasContext *ctx, arg_J4_tstbit0_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_fp0_jump_t(DisasContext *ctx, arg_J4_tstbit0_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_tp1_jump_nt(DisasContext *ctx, arg_J4_tstbit0_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_fp1_jump_nt(DisasContext *ctx, arg_J4_tstbit0_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_tp1_jump_t(DisasContext *ctx, arg_J4_tstbit0_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_fp1_jump_t(DisasContext *ctx, arg_J4_tstbit0_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpeq_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpeq_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_tp0_jump_t(DisasContext *ctx, arg_J4_cmpeq_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_fp0_jump_t(DisasContext *ctx, arg_J4_cmpeq_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpeq_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpeq_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_tp1_jump_t(DisasContext *ctx, arg_J4_cmpeq_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_fp1_jump_t(DisasContext *ctx, arg_J4_cmpeq_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpgt_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpgt_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_tp0_jump_t(DisasContext *ctx, arg_J4_cmpgt_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_fp0_jump_t(DisasContext *ctx, arg_J4_cmpgt_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpgt_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpgt_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_tp1_jump_t(DisasContext *ctx, arg_J4_cmpgt_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_fp1_jump_t(DisasContext *ctx, arg_J4_cmpgt_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_tp0_jump_nt(DisasContext *ctx, arg_J4_cmpgtu_tp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_tp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_fp0_jump_nt(DisasContext *ctx, arg_J4_cmpgtu_fp0_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_fp0_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_tp0_jump_t(DisasContext *ctx, arg_J4_cmpgtu_tp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_tp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_fp0_jump_t(DisasContext *ctx, arg_J4_cmpgtu_fp0_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_fp0_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_tp1_jump_nt(DisasContext *ctx, arg_J4_cmpgtu_tp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_tp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_fp1_jump_nt(DisasContext *ctx, arg_J4_cmpgtu_fp1_jump_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_fp1_jump_nt;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_tp1_jump_t(DisasContext *ctx, arg_J4_cmpgtu_tp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_tp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_fp1_jump_t(DisasContext *ctx, arg_J4_cmpgtu_fp1_jump_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_fp1_jump_t;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_jumpseti(DisasContext *ctx, arg_J4_jumpseti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_jumpseti;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_jumpsetr(DisasContext *ctx, arg_J4_jumpsetr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_jumpsetr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpeqi_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpeqi_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpeqi_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqi_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpeqi_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqi_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpgti_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgti_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpgti_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgti_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgti_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgti_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpgtui_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgtui_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpgtui_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtui_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgtui_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtui_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[1] = args->UI;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpeqn1_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpeqn1_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpeqn1_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeqn1_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpeqn1_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeqn1_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpgtn1_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgtn1_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpgtn1_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtn1_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgtn1_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtn1_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_t_jumpnv_t(DisasContext *ctx, arg_J4_tstbit0_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_t_jumpnv_nt(DisasContext *ctx, arg_J4_tstbit0_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_f_jumpnv_t(DisasContext *ctx, arg_J4_tstbit0_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_tstbit0_f_jumpnv_nt(DisasContext *ctx, arg_J4_tstbit0_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_tstbit0_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpeq_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpeq_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpgt_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgt_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpgtu_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_t_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgtu_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_t_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmplt_t_jumpnv_t(DisasContext *ctx, arg_J4_cmplt_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmplt_t_jumpnv_t;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmplt_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmplt_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmplt_t_jumpnv_nt;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpltu_t_jumpnv_t(DisasContext *ctx, arg_J4_cmpltu_t_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpltu_t_jumpnv_t;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpltu_t_jumpnv_nt(DisasContext *ctx, arg_J4_cmpltu_t_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpltu_t_jumpnv_nt;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpeq_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpeq_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpeq_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpeq_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpgt_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgt_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgt_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgt_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpgtu_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_f_jumpnv_t;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpgtu_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpgtu_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpgtu_f_jumpnv_nt;
    insn->regno[0] = args->Ns;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmplt_f_jumpnv_t(DisasContext *ctx, arg_J4_cmplt_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmplt_f_jumpnv_t;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmplt_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmplt_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmplt_f_jumpnv_nt;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpltu_f_jumpnv_t(DisasContext *ctx, arg_J4_cmpltu_f_jumpnv_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpltu_f_jumpnv_t;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J4_cmpltu_f_jumpnv_nt(DisasContext *ctx, arg_J4_cmpltu_f_jumpnv_nt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J4_cmpltu_f_jumpnv_nt;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Ns;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_call(DisasContext *ctx, arg_J2_call *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_call;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_callt(DisasContext *ctx, arg_J2_callt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_callt;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_callf(DisasContext *ctx, arg_J2_callf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_callf;
    insn->regno[0] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_callr(DisasContext *ctx, arg_J2_callr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_callr;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_J2_callrt(DisasContext *ctx, arg_J2_callrt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_callrt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_callrf(DisasContext *ctx, arg_J2_callrf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_callrf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_J2_callrh(DisasContext *ctx, arg_J2_callrh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_callrh;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_J2_loop0r(DisasContext *ctx, arg_J2_loop0r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_loop0r;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_loop1r(DisasContext *ctx, arg_J2_loop1r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_loop1r;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_loop0i(DisasContext *ctx, arg_J2_loop0i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_loop0i;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_J2_loop1i(DisasContext *ctx, arg_J2_loop1i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_loop1i;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_J2_ploop1sr(DisasContext *ctx, arg_J2_ploop1sr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_ploop1sr;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_ploop1si(DisasContext *ctx, arg_J2_ploop1si *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_ploop1si;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_J2_ploop2sr(DisasContext *ctx, arg_J2_ploop2sr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_ploop2sr;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_ploop2si(DisasContext *ctx, arg_J2_ploop2si *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_ploop2si;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_J2_ploop3sr(DisasContext *ctx, arg_J2_ploop3sr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_ploop3sr;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    return true;
}
static bool trans_J2_ploop3si(DisasContext *ctx, arg_J2_ploop3si *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_ploop3si;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ri,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadrub_io(DisasContext *ctx, arg_L2_loadrub_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrub_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L4_loadrub_ur(DisasContext *ctx, arg_L4_loadrub_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrub_ur;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadrub_ap(DisasContext *ctx, arg_L4_loadrub_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrub_ap;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadrub_pr(DisasContext *ctx, arg_L2_loadrub_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrub_pr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrub_pbr(DisasContext *ctx, arg_L2_loadrub_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrub_pbr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrub_pi(DisasContext *ctx, arg_L2_loadrub_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrub_pi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_loadrub_pci(DisasContext *ctx, arg_L2_loadrub_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrub_pci;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_loadrub_pcr(DisasContext *ctx, arg_L2_loadrub_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrub_pcr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrb_io(DisasContext *ctx, arg_L2_loadrb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrb_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L4_loadrb_ur(DisasContext *ctx, arg_L4_loadrb_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrb_ur;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadrb_ap(DisasContext *ctx, arg_L4_loadrb_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrb_ap;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadrb_pr(DisasContext *ctx, arg_L2_loadrb_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrb_pr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrb_pbr(DisasContext *ctx, arg_L2_loadrb_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrb_pbr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrb_pi(DisasContext *ctx, arg_L2_loadrb_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrb_pi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_loadrb_pci(DisasContext *ctx, arg_L2_loadrb_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrb_pci;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_loadrb_pcr(DisasContext *ctx, arg_L2_loadrb_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrb_pcr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadruh_io(DisasContext *ctx, arg_L2_loadruh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadruh_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L4_loadruh_ur(DisasContext *ctx, arg_L4_loadruh_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadruh_ur;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadruh_ap(DisasContext *ctx, arg_L4_loadruh_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadruh_ap;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadruh_pr(DisasContext *ctx, arg_L2_loadruh_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadruh_pr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadruh_pbr(DisasContext *ctx, arg_L2_loadruh_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadruh_pbr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadruh_pi(DisasContext *ctx, arg_L2_loadruh_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadruh_pi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadruh_pci(DisasContext *ctx, arg_L2_loadruh_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadruh_pci;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadruh_pcr(DisasContext *ctx, arg_L2_loadruh_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadruh_pcr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrh_io(DisasContext *ctx, arg_L2_loadrh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrh_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L4_loadrh_ur(DisasContext *ctx, arg_L4_loadrh_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrh_ur;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadrh_ap(DisasContext *ctx, arg_L4_loadrh_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrh_ap;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadrh_pr(DisasContext *ctx, arg_L2_loadrh_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrh_pr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrh_pbr(DisasContext *ctx, arg_L2_loadrh_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrh_pbr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrh_pi(DisasContext *ctx, arg_L2_loadrh_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrh_pi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadrh_pci(DisasContext *ctx, arg_L2_loadrh_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrh_pci;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadrh_pcr(DisasContext *ctx, arg_L2_loadrh_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrh_pcr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadri_io(DisasContext *ctx, arg_L2_loadri_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadri_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L4_loadri_ur(DisasContext *ctx, arg_L4_loadri_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadri_ur;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadri_ap(DisasContext *ctx, arg_L4_loadri_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadri_ap;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadri_pr(DisasContext *ctx, arg_L2_loadri_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadri_pr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadri_pbr(DisasContext *ctx, arg_L2_loadri_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadri_pbr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadri_pi(DisasContext *ctx, arg_L2_loadri_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadri_pi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_loadri_pci(DisasContext *ctx, arg_L2_loadri_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadri_pci;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_loadri_pcr(DisasContext *ctx, arg_L2_loadri_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadri_pcr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrd_io(DisasContext *ctx, arg_L2_loadrd_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrd_io;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_L4_loadrd_ur(DisasContext *ctx, arg_L4_loadrd_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrd_ur;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadrd_ap(DisasContext *ctx, arg_L4_loadrd_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrd_ap;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadrd_pr(DisasContext *ctx, arg_L2_loadrd_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrd_pr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrd_pbr(DisasContext *ctx, arg_L2_loadrd_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrd_pbr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadrd_pi(DisasContext *ctx, arg_L2_loadrd_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrd_pi;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_L2_loadrd_pci(DisasContext *ctx, arg_L2_loadrd_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrd_pci;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_L2_loadrd_pcr(DisasContext *ctx, arg_L2_loadrd_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrd_pcr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbzw2_io(DisasContext *ctx, arg_L2_loadbzw2_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw2_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L4_loadbzw2_ur(DisasContext *ctx, arg_L4_loadbzw2_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbzw2_ur;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadbzw2_ap(DisasContext *ctx, arg_L4_loadbzw2_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbzw2_ap;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadbzw2_pr(DisasContext *ctx, arg_L2_loadbzw2_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw2_pr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbzw2_pbr(DisasContext *ctx, arg_L2_loadbzw2_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw2_pbr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbzw2_pi(DisasContext *ctx, arg_L2_loadbzw2_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw2_pi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadbzw2_pci(DisasContext *ctx, arg_L2_loadbzw2_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw2_pci;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadbzw2_pcr(DisasContext *ctx, arg_L2_loadbzw2_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw2_pcr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbzw4_io(DisasContext *ctx, arg_L2_loadbzw4_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw4_io;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L4_loadbzw4_ur(DisasContext *ctx, arg_L4_loadbzw4_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbzw4_ur;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadbzw4_ap(DisasContext *ctx, arg_L4_loadbzw4_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbzw4_ap;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadbzw4_pr(DisasContext *ctx, arg_L2_loadbzw4_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw4_pr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbzw4_pbr(DisasContext *ctx, arg_L2_loadbzw4_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw4_pbr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbzw4_pi(DisasContext *ctx, arg_L2_loadbzw4_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw4_pi;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_loadbzw4_pci(DisasContext *ctx, arg_L2_loadbzw4_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw4_pci;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_loadbzw4_pcr(DisasContext *ctx, arg_L2_loadbzw4_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbzw4_pcr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbsw2_io(DisasContext *ctx, arg_L2_loadbsw2_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw2_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L4_loadbsw2_ur(DisasContext *ctx, arg_L4_loadbsw2_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbsw2_ur;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadbsw2_ap(DisasContext *ctx, arg_L4_loadbsw2_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbsw2_ap;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadbsw2_pr(DisasContext *ctx, arg_L2_loadbsw2_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw2_pr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbsw2_pbr(DisasContext *ctx, arg_L2_loadbsw2_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw2_pbr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbsw2_pi(DisasContext *ctx, arg_L2_loadbsw2_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw2_pi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadbsw2_pci(DisasContext *ctx, arg_L2_loadbsw2_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw2_pci;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadbsw2_pcr(DisasContext *ctx, arg_L2_loadbsw2_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw2_pcr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbsw4_io(DisasContext *ctx, arg_L2_loadbsw4_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw4_io;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L4_loadbsw4_ur(DisasContext *ctx, arg_L4_loadbsw4_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbsw4_ur;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadbsw4_ap(DisasContext *ctx, arg_L4_loadbsw4_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadbsw4_ap;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadbsw4_pr(DisasContext *ctx, arg_L2_loadbsw4_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw4_pr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbsw4_pbr(DisasContext *ctx, arg_L2_loadbsw4_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw4_pbr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadbsw4_pi(DisasContext *ctx, arg_L2_loadbsw4_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw4_pi;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_loadbsw4_pci(DisasContext *ctx, arg_L2_loadbsw4_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw4_pci;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_loadbsw4_pcr(DisasContext *ctx, arg_L2_loadbsw4_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadbsw4_pcr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadalignh_io(DisasContext *ctx, arg_L2_loadalignh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignh_io;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L4_loadalignh_ur(DisasContext *ctx, arg_L4_loadalignh_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadalignh_ur;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadalignh_ap(DisasContext *ctx, arg_L4_loadalignh_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadalignh_ap;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadalignh_pr(DisasContext *ctx, arg_L2_loadalignh_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignh_pr;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadalignh_pbr(DisasContext *ctx, arg_L2_loadalignh_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignh_pbr;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadalignh_pi(DisasContext *ctx, arg_L2_loadalignh_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignh_pi;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadalignh_pci(DisasContext *ctx, arg_L2_loadalignh_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignh_pci;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_loadalignh_pcr(DisasContext *ctx, arg_L2_loadalignh_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignh_pcr;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadalignb_io(DisasContext *ctx, arg_L2_loadalignb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignb_io;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L4_loadalignb_ur(DisasContext *ctx, arg_L4_loadalignb_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadalignb_ur;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_loadalignb_ap(DisasContext *ctx, arg_L4_loadalignb_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadalignb_ap;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Re;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L2_loadalignb_pr(DisasContext *ctx, arg_L2_loadalignb_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignb_pr;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadalignb_pbr(DisasContext *ctx, arg_L2_loadalignb_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignb_pbr;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_L2_loadalignb_pi(DisasContext *ctx, arg_L2_loadalignb_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignb_pi;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_loadalignb_pci(DisasContext *ctx, arg_L2_loadalignb_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignb_pci;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_loadalignb_pcr(DisasContext *ctx, arg_L2_loadalignb_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadalignb_pcr;
    insn->regno[0] = args->Ryy;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_S2_storerb_io(DisasContext *ctx, arg_S2_storerb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerb_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_storerb_pi(DisasContext *ctx, arg_S2_storerb_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerb_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_storerb_ap(DisasContext *ctx, arg_S4_storerb_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerb_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerb_pr(DisasContext *ctx, arg_S2_storerb_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerb_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_storerb_ur(DisasContext *ctx, arg_S4_storerb_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerb_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerb_pbr(DisasContext *ctx, arg_S2_storerb_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerb_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storerb_pci(DisasContext *ctx, arg_S2_storerb_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerb_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_storerb_pcr(DisasContext *ctx, arg_S2_storerb_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerb_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storerh_io(DisasContext *ctx, arg_S2_storerh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerh_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_storerh_pi(DisasContext *ctx, arg_S2_storerh_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerh_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_storerh_ap(DisasContext *ctx, arg_S4_storerh_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerh_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerh_pr(DisasContext *ctx, arg_S2_storerh_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerh_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_storerh_ur(DisasContext *ctx, arg_S4_storerh_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerh_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerh_pbr(DisasContext *ctx, arg_S2_storerh_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerh_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storerh_pci(DisasContext *ctx, arg_S2_storerh_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerh_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_storerh_pcr(DisasContext *ctx, arg_S2_storerh_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerh_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storerf_io(DisasContext *ctx, arg_S2_storerf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerf_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_storerf_pi(DisasContext *ctx, arg_S2_storerf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerf_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_storerf_ap(DisasContext *ctx, arg_S4_storerf_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerf_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerf_pr(DisasContext *ctx, arg_S2_storerf_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerf_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_storerf_ur(DisasContext *ctx, arg_S4_storerf_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerf_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerf_pbr(DisasContext *ctx, arg_S2_storerf_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerf_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storerf_pci(DisasContext *ctx, arg_S2_storerf_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerf_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_storerf_pcr(DisasContext *ctx, arg_S2_storerf_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerf_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storeri_io(DisasContext *ctx, arg_S2_storeri_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storeri_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_storeri_pi(DisasContext *ctx, arg_S2_storeri_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storeri_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S4_storeri_ap(DisasContext *ctx, arg_S4_storeri_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeri_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storeri_pr(DisasContext *ctx, arg_S2_storeri_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storeri_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_storeri_ur(DisasContext *ctx, arg_S4_storeri_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeri_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Rt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storeri_pbr(DisasContext *ctx, arg_S2_storeri_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storeri_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storeri_pci(DisasContext *ctx, arg_S2_storeri_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storeri_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_storeri_pcr(DisasContext *ctx, arg_S2_storeri_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storeri_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_storerd_io(DisasContext *ctx, arg_S2_storerd_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerd_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_S2_storerd_pi(DisasContext *ctx, arg_S2_storerd_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerd_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rtt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_S4_storerd_ap(DisasContext *ctx, arg_S4_storerd_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerd_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Rtt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerd_pr(DisasContext *ctx, arg_S2_storerd_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerd_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_storerd_ur(DisasContext *ctx, arg_S4_storerd_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerd_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Rtt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerd_pbr(DisasContext *ctx, arg_S2_storerd_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerd_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_storerd_pci(DisasContext *ctx, arg_S2_storerd_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerd_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rtt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_S2_storerd_pcr(DisasContext *ctx, arg_S2_storerd_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerd_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_storerinew_io(DisasContext *ctx, arg_S2_storerinew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerinew_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_storerinew_pi(DisasContext *ctx, arg_S2_storerinew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerinew_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S4_storerinew_ap(DisasContext *ctx, arg_S4_storerinew_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerinew_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Nt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerinew_pr(DisasContext *ctx, arg_S2_storerinew_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerinew_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S4_storerinew_ur(DisasContext *ctx, arg_S4_storerinew_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerinew_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Nt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerinew_pbr(DisasContext *ctx, arg_S2_storerinew_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerinew_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S2_storerinew_pci(DisasContext *ctx, arg_S2_storerinew_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerinew_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_storerinew_pcr(DisasContext *ctx, arg_S2_storerinew_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerinew_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S2_storerbnew_io(DisasContext *ctx, arg_S2_storerbnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbnew_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_storerbnew_pi(DisasContext *ctx, arg_S2_storerbnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbnew_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Nt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_storerbnew_ap(DisasContext *ctx, arg_S4_storerbnew_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerbnew_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Nt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerbnew_pr(DisasContext *ctx, arg_S2_storerbnew_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbnew_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S4_storerbnew_ur(DisasContext *ctx, arg_S4_storerbnew_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerbnew_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Nt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerbnew_pbr(DisasContext *ctx, arg_S2_storerbnew_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbnew_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S2_storerbnew_pci(DisasContext *ctx, arg_S2_storerbnew_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbnew_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_storerbnew_pcr(DisasContext *ctx, arg_S2_storerbnew_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbnew_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S2_storerhnew_io(DisasContext *ctx, arg_S2_storerhnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhnew_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_storerhnew_pi(DisasContext *ctx, arg_S2_storerhnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhnew_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_storerhnew_ap(DisasContext *ctx, arg_S4_storerhnew_ap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerhnew_ap;
    insn->regno[0] = args->Re;
    insn->regno[1] = args->Nt;
    insn->which_extended = 1;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerhnew_pr(DisasContext *ctx, arg_S2_storerhnew_pr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhnew_pr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S4_storerhnew_ur(DisasContext *ctx, arg_S4_storerhnew_ur *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerhnew_ur;
    insn->regno[0] = args->Ru;
    insn->regno[1] = args->Nt;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_storerhnew_pbr(DisasContext *ctx, arg_S2_storerhnew_pbr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhnew_pbr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S2_storerhnew_pci(DisasContext *ctx, arg_S2_storerhnew_pci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhnew_pci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_storerhnew_pcr(DisasContext *ctx, arg_S2_storerhnew_pcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhnew_pcr;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Nt;
    return true;
}
static bool trans_S2_allocframe(DisasContext *ctx, arg_S2_allocframe *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_allocframe;
    insn->regno[0] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_L2_loadw_aq(DisasContext *ctx, arg_L2_loadw_aq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadw_aq;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_L4_loadd_aq(DisasContext *ctx, arg_L4_loadd_aq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadd_aq;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_R6_release_at_vi(DisasContext *ctx, arg_R6_release_at_vi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = R6_release_at_vi;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_R6_release_st_vi(DisasContext *ctx, arg_R6_release_st_vi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = R6_release_st_vi;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_S2_storew_rl_at_vi(DisasContext *ctx, arg_S2_storew_rl_at_vi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storew_rl_at_vi;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_S4_stored_rl_at_vi(DisasContext *ctx, arg_S4_stored_rl_at_vi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_stored_rl_at_vi;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rtt;
    return true;
}
static bool trans_S2_storew_rl_st_vi(DisasContext *ctx, arg_S2_storew_rl_st_vi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storew_rl_st_vi;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_S4_stored_rl_st_vi(DisasContext *ctx, arg_S4_stored_rl_st_vi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_stored_rl_st_vi;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rtt;
    return true;
}
static bool trans_L2_deallocframe(DisasContext *ctx, arg_L2_deallocframe *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_deallocframe;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_L4_return(DisasContext *ctx, arg_L4_return *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_return;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_L4_return_t(DisasContext *ctx, arg_L4_return_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_return_t;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_L4_return_f(DisasContext *ctx, arg_L4_return_f *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_return_f;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_L4_return_tnew_pt(DisasContext *ctx, arg_L4_return_tnew_pt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_return_tnew_pt;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_L4_return_fnew_pt(DisasContext *ctx, arg_L4_return_fnew_pt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_return_fnew_pt;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_L4_return_tnew_pnt(DisasContext *ctx, arg_L4_return_tnew_pnt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_return_tnew_pnt;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_L4_return_fnew_pnt(DisasContext *ctx, arg_L4_return_fnew_pnt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_return_fnew_pnt;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_L2_loadw_locked(DisasContext *ctx, arg_L2_loadw_locked *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadw_locked;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_storew_locked(DisasContext *ctx, arg_S2_storew_locked *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storew_locked;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Pd;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_L4_loadd_locked(DisasContext *ctx, arg_L4_loadd_locked *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadd_locked;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S4_stored_locked(DisasContext *ctx, arg_S4_stored_locked *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_stored_locked;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Pd;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_L4_loadrub_rr(DisasContext *ctx, arg_L4_loadrub_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrub_rr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrubt_io(DisasContext *ctx, arg_L2_ploadrubt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubt_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrubt_pi(DisasContext *ctx, arg_L2_ploadrubt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubt_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_ploadrubf_io(DisasContext *ctx, arg_L2_ploadrubf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubf_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrubf_pi(DisasContext *ctx, arg_L2_ploadrubf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubf_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_ploadrubtnew_io(DisasContext *ctx, arg_L2_ploadrubtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubtnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrubfnew_io(DisasContext *ctx, arg_L2_ploadrubfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubfnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrubt_rr(DisasContext *ctx, arg_L4_ploadrubt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrubf_rr(DisasContext *ctx, arg_L4_ploadrubf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrubtnew_rr(DisasContext *ctx, arg_L4_ploadrubtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrubfnew_rr(DisasContext *ctx, arg_L4_ploadrubfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrubtnew_pi(DisasContext *ctx, arg_L2_ploadrubtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubtnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_ploadrubfnew_pi(DisasContext *ctx, arg_L2_ploadrubfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrubfnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L4_ploadrubt_abs(DisasContext *ctx, arg_L4_ploadrubt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubt_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrubf_abs(DisasContext *ctx, arg_L4_ploadrubf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubf_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrubtnew_abs(DisasContext *ctx, arg_L4_ploadrubtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubtnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrubfnew_abs(DisasContext *ctx, arg_L4_ploadrubfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrubfnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_loadrb_rr(DisasContext *ctx, arg_L4_loadrb_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrb_rr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrbt_io(DisasContext *ctx, arg_L2_ploadrbt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbt_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrbt_pi(DisasContext *ctx, arg_L2_ploadrbt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbt_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_ploadrbf_io(DisasContext *ctx, arg_L2_ploadrbf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbf_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrbf_pi(DisasContext *ctx, arg_L2_ploadrbf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbf_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_ploadrbtnew_io(DisasContext *ctx, arg_L2_ploadrbtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbtnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrbfnew_io(DisasContext *ctx, arg_L2_ploadrbfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbfnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrbt_rr(DisasContext *ctx, arg_L4_ploadrbt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrbf_rr(DisasContext *ctx, arg_L4_ploadrbf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrbtnew_rr(DisasContext *ctx, arg_L4_ploadrbtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrbfnew_rr(DisasContext *ctx, arg_L4_ploadrbfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrbtnew_pi(DisasContext *ctx, arg_L2_ploadrbtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbtnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L2_ploadrbfnew_pi(DisasContext *ctx, arg_L2_ploadrbfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrbfnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_L4_ploadrbt_abs(DisasContext *ctx, arg_L4_ploadrbt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbt_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrbf_abs(DisasContext *ctx, arg_L4_ploadrbf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbf_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrbtnew_abs(DisasContext *ctx, arg_L4_ploadrbtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbtnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrbfnew_abs(DisasContext *ctx, arg_L4_ploadrbfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrbfnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_loadruh_rr(DisasContext *ctx, arg_L4_loadruh_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadruh_rr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadruht_io(DisasContext *ctx, arg_L2_ploadruht_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruht_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_ploadruht_pi(DisasContext *ctx, arg_L2_ploadruht_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruht_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_ploadruhf_io(DisasContext *ctx, arg_L2_ploadruhf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruhf_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_ploadruhf_pi(DisasContext *ctx, arg_L2_ploadruhf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruhf_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_ploadruhtnew_io(DisasContext *ctx, arg_L2_ploadruhtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruhtnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_ploadruhfnew_io(DisasContext *ctx, arg_L2_ploadruhfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruhfnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L4_ploadruht_rr(DisasContext *ctx, arg_L4_ploadruht_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruht_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadruhf_rr(DisasContext *ctx, arg_L4_ploadruhf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruhf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadruhtnew_rr(DisasContext *ctx, arg_L4_ploadruhtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruhtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadruhfnew_rr(DisasContext *ctx, arg_L4_ploadruhfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruhfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadruhtnew_pi(DisasContext *ctx, arg_L2_ploadruhtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruhtnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_ploadruhfnew_pi(DisasContext *ctx, arg_L2_ploadruhfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadruhfnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L4_ploadruht_abs(DisasContext *ctx, arg_L4_ploadruht_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruht_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadruhf_abs(DisasContext *ctx, arg_L4_ploadruhf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruhf_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadruhtnew_abs(DisasContext *ctx, arg_L4_ploadruhtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruhtnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadruhfnew_abs(DisasContext *ctx, arg_L4_ploadruhfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadruhfnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_loadrh_rr(DisasContext *ctx, arg_L4_loadrh_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrh_rr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrht_io(DisasContext *ctx, arg_L2_ploadrht_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrht_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_ploadrht_pi(DisasContext *ctx, arg_L2_ploadrht_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrht_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_ploadrhf_io(DisasContext *ctx, arg_L2_ploadrhf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrhf_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_ploadrhf_pi(DisasContext *ctx, arg_L2_ploadrhf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrhf_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_ploadrhtnew_io(DisasContext *ctx, arg_L2_ploadrhtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrhtnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_ploadrhfnew_io(DisasContext *ctx, arg_L2_ploadrhfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrhfnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L4_ploadrht_rr(DisasContext *ctx, arg_L4_ploadrht_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrht_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrhf_rr(DisasContext *ctx, arg_L4_ploadrhf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrhf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrhtnew_rr(DisasContext *ctx, arg_L4_ploadrhtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrhtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrhfnew_rr(DisasContext *ctx, arg_L4_ploadrhfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrhfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrhtnew_pi(DisasContext *ctx, arg_L2_ploadrhtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrhtnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L2_ploadrhfnew_pi(DisasContext *ctx, arg_L2_ploadrhfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrhfnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_L4_ploadrht_abs(DisasContext *ctx, arg_L4_ploadrht_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrht_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrhf_abs(DisasContext *ctx, arg_L4_ploadrhf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrhf_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrhtnew_abs(DisasContext *ctx, arg_L4_ploadrhtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrhtnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrhfnew_abs(DisasContext *ctx, arg_L4_ploadrhfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrhfnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_loadri_rr(DisasContext *ctx, arg_L4_loadri_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadri_rr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrit_io(DisasContext *ctx, arg_L2_ploadrit_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrit_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L2_ploadrit_pi(DisasContext *ctx, arg_L2_ploadrit_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrit_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_ploadrif_io(DisasContext *ctx, arg_L2_ploadrif_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrif_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L2_ploadrif_pi(DisasContext *ctx, arg_L2_ploadrif_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrif_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_ploadritnew_io(DisasContext *ctx, arg_L2_ploadritnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadritnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L2_ploadrifnew_io(DisasContext *ctx, arg_L2_ploadrifnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrifnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L4_ploadrit_rr(DisasContext *ctx, arg_L4_ploadrit_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrit_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrif_rr(DisasContext *ctx, arg_L4_ploadrif_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrif_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadritnew_rr(DisasContext *ctx, arg_L4_ploadritnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadritnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrifnew_rr(DisasContext *ctx, arg_L4_ploadrifnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrifnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadritnew_pi(DisasContext *ctx, arg_L2_ploadritnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadritnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L2_ploadrifnew_pi(DisasContext *ctx, arg_L2_ploadrifnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrifnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_L4_ploadrit_abs(DisasContext *ctx, arg_L4_ploadrit_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrit_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrif_abs(DisasContext *ctx, arg_L4_ploadrif_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrif_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadritnew_abs(DisasContext *ctx, arg_L4_ploadritnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadritnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrifnew_abs(DisasContext *ctx, arg_L4_ploadrifnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrifnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_loadrd_rr(DisasContext *ctx, arg_L4_loadrd_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_loadrd_rr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrdt_io(DisasContext *ctx, arg_L2_ploadrdt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdt_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_L2_ploadrdt_pi(DisasContext *ctx, arg_L2_ploadrdt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdt_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_L2_ploadrdf_io(DisasContext *ctx, arg_L2_ploadrdf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdf_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_L2_ploadrdf_pi(DisasContext *ctx, arg_L2_ploadrdf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdf_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_L2_ploadrdtnew_io(DisasContext *ctx, arg_L2_ploadrdtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdtnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_L2_ploadrdfnew_io(DisasContext *ctx, arg_L2_ploadrdfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdfnew_io;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_L4_ploadrdt_rr(DisasContext *ctx, arg_L4_ploadrdt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrdf_rr(DisasContext *ctx, arg_L4_ploadrdf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrdtnew_rr(DisasContext *ctx, arg_L4_ploadrdtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrdfnew_rr(DisasContext *ctx, arg_L4_ploadrdfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_ploadrdtnew_pi(DisasContext *ctx, arg_L2_ploadrdtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdtnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_L2_ploadrdfnew_pi(DisasContext *ctx, arg_L2_ploadrdfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_ploadrdfnew_pi;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rx;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_L4_ploadrdt_abs(DisasContext *ctx, arg_L4_ploadrdt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdt_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrdf_abs(DisasContext *ctx, arg_L4_ploadrdf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdf_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrdtnew_abs(DisasContext *ctx, arg_L4_ploadrdtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdtnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_ploadrdfnew_abs(DisasContext *ctx, arg_L4_ploadrdfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ploadrdfnew_abs;
    insn->regno[0] = args->Pt;
    insn->regno[1] = args->Rdd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storerb_rr(DisasContext *ctx, arg_S4_storerb_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerb_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbt_io(DisasContext *ctx, arg_S2_pstorerbt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbt_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbt_pi(DisasContext *ctx, arg_S2_pstorerbt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbt_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_pstorerbf_io(DisasContext *ctx, arg_S2_pstorerbf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbf_pi(DisasContext *ctx, arg_S2_pstorerbf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbf_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_pstorerbt_rr(DisasContext *ctx, arg_S4_pstorerbt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbf_rr(DisasContext *ctx, arg_S4_pstorerbf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbtnew_io(DisasContext *ctx, arg_S4_pstorerbtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbfnew_io(DisasContext *ctx, arg_S4_pstorerbfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbtnew_rr(DisasContext *ctx, arg_S4_pstorerbtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbfnew_rr(DisasContext *ctx, arg_S4_pstorerbfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbtnew_pi(DisasContext *ctx, arg_S2_pstorerbtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbtnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_pstorerbfnew_pi(DisasContext *ctx, arg_S2_pstorerbfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbfnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_pstorerbt_abs(DisasContext *ctx, arg_S4_pstorerbt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbt_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbf_abs(DisasContext *ctx, arg_S4_pstorerbf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbf_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbtnew_abs(DisasContext *ctx, arg_S4_pstorerbtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbtnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbfnew_abs(DisasContext *ctx, arg_S4_pstorerbfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbfnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storerh_rr(DisasContext *ctx, arg_S4_storerh_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerh_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerht_io(DisasContext *ctx, arg_S2_pstorerht_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerht_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerht_pi(DisasContext *ctx, arg_S2_pstorerht_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerht_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerhf_io(DisasContext *ctx, arg_S2_pstorerhf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerhf_pi(DisasContext *ctx, arg_S2_pstorerhf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhf_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerht_rr(DisasContext *ctx, arg_S4_pstorerht_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerht_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhf_rr(DisasContext *ctx, arg_S4_pstorerhf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhtnew_io(DisasContext *ctx, arg_S4_pstorerhtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerhfnew_io(DisasContext *ctx, arg_S4_pstorerhfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerhtnew_rr(DisasContext *ctx, arg_S4_pstorerhtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhfnew_rr(DisasContext *ctx, arg_S4_pstorerhfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerhtnew_pi(DisasContext *ctx, arg_S2_pstorerhtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhtnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerhfnew_pi(DisasContext *ctx, arg_S2_pstorerhfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhfnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerht_abs(DisasContext *ctx, arg_S4_pstorerht_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerht_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhf_abs(DisasContext *ctx, arg_S4_pstorerhf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhf_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhtnew_abs(DisasContext *ctx, arg_S4_pstorerhtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhtnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhfnew_abs(DisasContext *ctx, arg_S4_pstorerhfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhfnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storerf_rr(DisasContext *ctx, arg_S4_storerf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerf_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerft_io(DisasContext *ctx, arg_S2_pstorerft_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerft_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerft_pi(DisasContext *ctx, arg_S2_pstorerft_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerft_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerff_io(DisasContext *ctx, arg_S2_pstorerff_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerff_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerff_pi(DisasContext *ctx, arg_S2_pstorerff_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerff_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerft_rr(DisasContext *ctx, arg_S4_pstorerft_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerft_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerff_rr(DisasContext *ctx, arg_S4_pstorerff_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerff_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerftnew_io(DisasContext *ctx, arg_S4_pstorerftnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerftnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerffnew_io(DisasContext *ctx, arg_S4_pstorerffnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerffnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerftnew_rr(DisasContext *ctx, arg_S4_pstorerftnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerftnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerffnew_rr(DisasContext *ctx, arg_S4_pstorerffnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerffnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerftnew_pi(DisasContext *ctx, arg_S2_pstorerftnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerftnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerffnew_pi(DisasContext *ctx, arg_S2_pstorerffnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerffnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerft_abs(DisasContext *ctx, arg_S4_pstorerft_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerft_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerff_abs(DisasContext *ctx, arg_S4_pstorerff_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerff_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerftnew_abs(DisasContext *ctx, arg_S4_pstorerftnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerftnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerffnew_abs(DisasContext *ctx, arg_S4_pstorerffnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerffnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storeri_rr(DisasContext *ctx, arg_S4_storeri_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeri_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerit_io(DisasContext *ctx, arg_S2_pstorerit_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerit_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerit_pi(DisasContext *ctx, arg_S2_pstorerit_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerit_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerif_io(DisasContext *ctx, arg_S2_pstorerif_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerif_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerif_pi(DisasContext *ctx, arg_S2_pstorerif_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerif_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S4_pstorerit_rr(DisasContext *ctx, arg_S4_pstorerit_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerit_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerif_rr(DisasContext *ctx, arg_S4_pstorerif_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerif_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstoreritnew_io(DisasContext *ctx, arg_S4_pstoreritnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstoreritnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S4_pstorerifnew_io(DisasContext *ctx, arg_S4_pstorerifnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerifnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S4_pstoreritnew_rr(DisasContext *ctx, arg_S4_pstoreritnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstoreritnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerifnew_rr(DisasContext *ctx, arg_S4_pstorerifnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerifnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstoreritnew_pi(DisasContext *ctx, arg_S2_pstoreritnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstoreritnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerifnew_pi(DisasContext *ctx, arg_S2_pstorerifnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerifnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S4_pstorerit_abs(DisasContext *ctx, arg_S4_pstorerit_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerit_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerif_abs(DisasContext *ctx, arg_S4_pstorerif_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerif_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstoreritnew_abs(DisasContext *ctx, arg_S4_pstoreritnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstoreritnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerifnew_abs(DisasContext *ctx, arg_S4_pstorerifnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerifnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storerd_rr(DisasContext *ctx, arg_S4_storerd_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerd_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rtt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerdt_io(DisasContext *ctx, arg_S2_pstorerdt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerdt_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_S2_pstorerdt_pi(DisasContext *ctx, arg_S2_pstorerdt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerdt_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rtt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_S2_pstorerdf_io(DisasContext *ctx, arg_S2_pstorerdf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerdf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_S2_pstorerdf_pi(DisasContext *ctx, arg_S2_pstorerdf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerdf_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rtt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_S4_pstorerdt_rr(DisasContext *ctx, arg_S4_pstorerdt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rtt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerdf_rr(DisasContext *ctx, arg_S4_pstorerdf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rtt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerdtnew_io(DisasContext *ctx, arg_S4_pstorerdtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_S4_pstorerdfnew_io(DisasContext *ctx, arg_S4_pstorerdfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_S4_pstorerdtnew_rr(DisasContext *ctx, arg_S4_pstorerdtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rtt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerdfnew_rr(DisasContext *ctx, arg_S4_pstorerdfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Rtt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerdtnew_pi(DisasContext *ctx, arg_S2_pstorerdtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerdtnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rtt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_S2_pstorerdfnew_pi(DisasContext *ctx, arg_S2_pstorerdfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerdfnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Rtt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_S4_pstorerdt_abs(DisasContext *ctx, arg_S4_pstorerdt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdt_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerdf_abs(DisasContext *ctx, arg_S4_pstorerdf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdf_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerdtnew_abs(DisasContext *ctx, arg_S4_pstorerdtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdtnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerdfnew_abs(DisasContext *ctx, arg_S4_pstorerdfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerdfnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storerinew_rr(DisasContext *ctx, arg_S4_storerinew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerinew_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerinewt_io(DisasContext *ctx, arg_S2_pstorerinewt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerinewt_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerinewt_pi(DisasContext *ctx, arg_S2_pstorerinewt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerinewt_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerinewf_io(DisasContext *ctx, arg_S2_pstorerinewf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerinewf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerinewf_pi(DisasContext *ctx, arg_S2_pstorerinewf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerinewf_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S4_pstorerinewt_rr(DisasContext *ctx, arg_S4_pstorerinewt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerinewf_rr(DisasContext *ctx, arg_S4_pstorerinewf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerinewtnew_io(DisasContext *ctx, arg_S4_pstorerinewtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S4_pstorerinewfnew_io(DisasContext *ctx, arg_S4_pstorerinewfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S4_pstorerinewtnew_rr(DisasContext *ctx, arg_S4_pstorerinewtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerinewfnew_rr(DisasContext *ctx, arg_S4_pstorerinewfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerinewtnew_pi(DisasContext *ctx, arg_S2_pstorerinewtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerinewtnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S2_pstorerinewfnew_pi(DisasContext *ctx, arg_S2_pstorerinewfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerinewfnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   2, 0);
    return true;
}
static bool trans_S4_pstorerinewt_abs(DisasContext *ctx, arg_S4_pstorerinewt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewt_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerinewf_abs(DisasContext *ctx, arg_S4_pstorerinewf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewf_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerinewtnew_abs(DisasContext *ctx, arg_S4_pstorerinewtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewtnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerinewfnew_abs(DisasContext *ctx, arg_S4_pstorerinewfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerinewfnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storerbnew_rr(DisasContext *ctx, arg_S4_storerbnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerbnew_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbnewt_io(DisasContext *ctx, arg_S2_pstorerbnewt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbnewt_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbnewt_pi(DisasContext *ctx, arg_S2_pstorerbnewt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbnewt_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_pstorerbnewf_io(DisasContext *ctx, arg_S2_pstorerbnewf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbnewf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbnewf_pi(DisasContext *ctx, arg_S2_pstorerbnewf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbnewf_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_pstorerbnewt_rr(DisasContext *ctx, arg_S4_pstorerbnewt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewf_rr(DisasContext *ctx, arg_S4_pstorerbnewf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewtnew_io(DisasContext *ctx, arg_S4_pstorerbnewtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewfnew_io(DisasContext *ctx, arg_S4_pstorerbnewfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewtnew_rr(DisasContext *ctx, arg_S4_pstorerbnewtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewfnew_rr(DisasContext *ctx, arg_S4_pstorerbnewfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerbnewtnew_pi(DisasContext *ctx, arg_S2_pstorerbnewtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbnewtnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_pstorerbnewfnew_pi(DisasContext *ctx, arg_S2_pstorerbnewfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerbnewfnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_pstorerbnewt_abs(DisasContext *ctx, arg_S4_pstorerbnewt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewt_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewf_abs(DisasContext *ctx, arg_S4_pstorerbnewf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewf_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewtnew_abs(DisasContext *ctx, arg_S4_pstorerbnewtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewtnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerbnewfnew_abs(DisasContext *ctx, arg_S4_pstorerbnewfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerbnewfnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_storerhnew_rr(DisasContext *ctx, arg_S4_storerhnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storerhnew_rr;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerhnewt_io(DisasContext *ctx, arg_S2_pstorerhnewt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhnewt_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerhnewt_pi(DisasContext *ctx, arg_S2_pstorerhnewt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhnewt_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerhnewf_io(DisasContext *ctx, arg_S2_pstorerhnewf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhnewf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerhnewf_pi(DisasContext *ctx, arg_S2_pstorerhnewf_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhnewf_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerhnewt_rr(DisasContext *ctx, arg_S4_pstorerhnewt_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewt_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhnewf_rr(DisasContext *ctx, arg_S4_pstorerhnewf_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewf_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhnewtnew_io(DisasContext *ctx, arg_S4_pstorerhnewtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerhnewfnew_io(DisasContext *ctx, arg_S4_pstorerhnewfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerhnewtnew_rr(DisasContext *ctx, arg_S4_pstorerhnewtnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewtnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhnewfnew_rr(DisasContext *ctx, arg_S4_pstorerhnewfnew_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewfnew_rr;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->regno[3] = args->Nt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_pstorerhnewtnew_pi(DisasContext *ctx, arg_S2_pstorerhnewtnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhnewtnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S2_pstorerhnewfnew_pi(DisasContext *ctx, arg_S2_pstorerhnewfnew_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_pstorerhnewfnew_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Nt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   1, 0);
    return true;
}
static bool trans_S4_pstorerhnewt_abs(DisasContext *ctx, arg_S4_pstorerhnewt_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewt_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhnewf_abs(DisasContext *ctx, arg_S4_pstorerhnewf_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewf_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhnewtnew_abs(DisasContext *ctx, arg_S4_pstorerhnewtnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewtnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_pstorerhnewfnew_abs(DisasContext *ctx, arg_S4_pstorerhnewfnew_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_pstorerhnewfnew_abs;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_add_memopw_io(DisasContext *ctx, arg_L4_add_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_add_memopw_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L4_add_memopb_io(DisasContext *ctx, arg_L4_add_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_add_memopb_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_add_memoph_io(DisasContext *ctx, arg_L4_add_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_add_memoph_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L4_sub_memopw_io(DisasContext *ctx, arg_L4_sub_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_sub_memopw_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L4_sub_memopb_io(DisasContext *ctx, arg_L4_sub_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_sub_memopb_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_sub_memoph_io(DisasContext *ctx, arg_L4_sub_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_sub_memoph_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L4_and_memopw_io(DisasContext *ctx, arg_L4_and_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_and_memopw_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L4_and_memopb_io(DisasContext *ctx, arg_L4_and_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_and_memopb_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_and_memoph_io(DisasContext *ctx, arg_L4_and_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_and_memoph_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L4_or_memopw_io(DisasContext *ctx, arg_L4_or_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_or_memopw_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L4_or_memopb_io(DisasContext *ctx, arg_L4_or_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_or_memopb_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L4_or_memoph_io(DisasContext *ctx, arg_L4_or_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_or_memoph_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L4_iadd_memopw_io(DisasContext *ctx, arg_L4_iadd_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_iadd_memopw_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_iadd_memopb_io(DisasContext *ctx, arg_L4_iadd_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_iadd_memopb_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_iadd_memoph_io(DisasContext *ctx, arg_L4_iadd_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_iadd_memoph_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_isub_memopw_io(DisasContext *ctx, arg_L4_isub_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_isub_memopw_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_isub_memopb_io(DisasContext *ctx, arg_L4_isub_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_isub_memopb_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_isub_memoph_io(DisasContext *ctx, arg_L4_isub_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_isub_memoph_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_iand_memopw_io(DisasContext *ctx, arg_L4_iand_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_iand_memopw_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_iand_memopb_io(DisasContext *ctx, arg_L4_iand_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_iand_memopb_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_iand_memoph_io(DisasContext *ctx, arg_L4_iand_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_iand_memoph_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_ior_memopw_io(DisasContext *ctx, arg_L4_ior_memopw_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ior_memopw_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_ior_memopb_io(DisasContext *ctx, arg_L4_ior_memopb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ior_memopb_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_L4_ior_memoph_io(DisasContext *ctx, arg_L4_ior_memoph_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L4_ior_memoph_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_storeirbt_io(DisasContext *ctx, arg_S4_storeirbt_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirbt_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirbf_io(DisasContext *ctx, arg_S4_storeirbf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirbf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirbtnew_io(DisasContext *ctx, arg_S4_storeirbtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirbtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirbfnew_io(DisasContext *ctx, arg_S4_storeirbfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirbfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirht_io(DisasContext *ctx, arg_S4_storeirht_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirht_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirhf_io(DisasContext *ctx, arg_S4_storeirhf_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirhf_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirhtnew_io(DisasContext *ctx, arg_S4_storeirhtnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirhtnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirhfnew_io(DisasContext *ctx, arg_S4_storeirhfnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirhfnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirit_io(DisasContext *ctx, arg_S4_storeirit_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirit_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirif_io(DisasContext *ctx, arg_S4_storeirif_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirif_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeiritnew_io(DisasContext *ctx, arg_S4_storeiritnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeiritnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirifnew_io(DisasContext *ctx, arg_S4_storeirifnew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirifnew_io;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirb_io(DisasContext *ctx, arg_S4_storeirb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirb_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeirh_io(DisasContext *ctx, arg_S4_storeirh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeirh_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S4_storeiri_io(DisasContext *ctx, arg_S4_storeiri_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_storeiri_io;
    insn->regno[0] = args->Rs;
    insn->which_extended = 1;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_L2_loadrubgp(DisasContext *ctx, arg_L2_loadrubgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrubgp;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_loadrbgp(DisasContext *ctx, arg_L2_loadrbgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrbgp;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_L2_loadruhgp(DisasContext *ctx, arg_L2_loadruhgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadruhgp;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_loadrhgp(DisasContext *ctx, arg_L2_loadrhgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrhgp;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_L2_loadrigp(DisasContext *ctx, arg_L2_loadrigp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrigp;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_L2_loadrdgp(DisasContext *ctx, arg_L2_loadrdgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = L2_loadrdgp;
    insn->regno[0] = args->Rdd;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_S2_storerbgp(DisasContext *ctx, arg_S2_storerbgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbgp;
    insn->regno[0] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_storerhgp(DisasContext *ctx, arg_S2_storerhgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhgp;
    insn->regno[0] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_storerfgp(DisasContext *ctx, arg_S2_storerfgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerfgp;
    insn->regno[0] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_S2_storerigp(DisasContext *ctx, arg_S2_storerigp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerigp;
    insn->regno[0] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S2_storerdgp(DisasContext *ctx, arg_S2_storerdgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerdgp;
    insn->regno[0] = args->Rtt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_S2_storerinewgp(DisasContext *ctx, arg_S2_storerinewgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerinewgp;
    insn->regno[0] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_S2_storerbnewgp(DisasContext *ctx, arg_S2_storerbnewgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerbnewgp;
    insn->regno[0] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_storerhnewgp(DisasContext *ctx, arg_S2_storerhnewgp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_storerhnewgp;
    insn->regno[0] = args->Nt;
    insn->which_extended = 0;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_C2_cmpeq(DisasContext *ctx, arg_C2_cmpeq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpeq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_cmpgt(DisasContext *ctx, arg_C2_cmpgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_cmpgtu(DisasContext *ctx, arg_C2_cmpgtu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpgtu;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_cmpeqp(DisasContext *ctx, arg_C2_cmpeqp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpeqp;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_C2_cmpgtp(DisasContext *ctx, arg_C2_cmpgtp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpgtp;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_C2_cmpgtup(DisasContext *ctx, arg_C2_cmpgtup *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpgtup;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_rcmpeqi(DisasContext *ctx, arg_A4_rcmpeqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_rcmpeqi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_rcmpneqi(DisasContext *ctx, arg_A4_rcmpneqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_rcmpneqi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_rcmpeq(DisasContext *ctx, arg_A4_rcmpeq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_rcmpeq;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_rcmpneq(DisasContext *ctx, arg_A4_rcmpneq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_rcmpneq;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_bitsset(DisasContext *ctx, arg_C2_bitsset *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_bitsset;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_bitsclr(DisasContext *ctx, arg_C2_bitsclr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_bitsclr;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C4_nbitsset(DisasContext *ctx, arg_C4_nbitsset *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_nbitsset;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C4_nbitsclr(DisasContext *ctx, arg_C4_nbitsclr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_nbitsclr;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_cmpeqi(DisasContext *ctx, arg_C2_cmpeqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpeqi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_cmpgti(DisasContext *ctx, arg_C2_cmpgti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpgti;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_cmpgtui(DisasContext *ctx, arg_C2_cmpgtui *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmpgtui;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_C2_bitsclri(DisasContext *ctx, arg_C2_bitsclri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_bitsclri;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_C4_nbitsclri(DisasContext *ctx, arg_C4_nbitsclri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_nbitsclri;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_C4_cmpneqi(DisasContext *ctx, arg_C4_cmpneqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_cmpneqi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C4_cmpltei(DisasContext *ctx, arg_C4_cmpltei *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_cmpltei;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C4_cmplteui(DisasContext *ctx, arg_C4_cmplteui *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_cmplteui;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_C4_cmpneq(DisasContext *ctx, arg_C4_cmpneq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_cmpneq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C4_cmplte(DisasContext *ctx, arg_C4_cmplte *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_cmplte;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C4_cmplteu(DisasContext *ctx, arg_C4_cmplteu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_cmplteu;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_and(DisasContext *ctx, arg_C2_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_and;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Pt;
    insn->regno[2] = args->Ps;
    return true;
}
static bool trans_C2_or(DisasContext *ctx, arg_C2_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_or;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Pt;
    insn->regno[2] = args->Ps;
    return true;
}
static bool trans_C2_xor(DisasContext *ctx, arg_C2_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_xor;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    return true;
}
static bool trans_C2_andn(DisasContext *ctx, arg_C2_andn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_andn;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Pt;
    insn->regno[2] = args->Ps;
    return true;
}
static bool trans_C2_not(DisasContext *ctx, arg_C2_not *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_not;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    return true;
}
static bool trans_C2_orn(DisasContext *ctx, arg_C2_orn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_orn;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Pt;
    insn->regno[2] = args->Ps;
    return true;
}
static bool trans_C4_and_and(DisasContext *ctx, arg_C4_and_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_and_and;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C4_and_or(DisasContext *ctx, arg_C4_and_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_and_or;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C4_or_and(DisasContext *ctx, arg_C4_or_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_or_and;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C4_or_or(DisasContext *ctx, arg_C4_or_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_or_or;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C4_and_andn(DisasContext *ctx, arg_C4_and_andn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_and_andn;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C4_and_orn(DisasContext *ctx, arg_C4_and_orn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_and_orn;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C4_or_andn(DisasContext *ctx, arg_C4_or_andn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_or_andn;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C4_or_orn(DisasContext *ctx, arg_C4_or_orn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_or_orn;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_C2_any8(DisasContext *ctx, arg_C2_any8 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_any8;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    return true;
}
static bool trans_C2_all8(DisasContext *ctx, arg_C2_all8 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_all8;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    return true;
}
static bool trans_C2_vitpack(DisasContext *ctx, arg_C2_vitpack *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_vitpack;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    return true;
}
static bool trans_C2_mux(DisasContext *ctx, arg_C2_mux *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_mux;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Pu;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_C2_cmovenewit(DisasContext *ctx, arg_C2_cmovenewit *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmovenewit;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_cmovenewif(DisasContext *ctx, arg_C2_cmovenewif *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmovenewif;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_cmoveit(DisasContext *ctx, arg_C2_cmoveit *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmoveit;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_cmoveif(DisasContext *ctx, arg_C2_cmoveif *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_cmoveif;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_ccombinewnewt(DisasContext *ctx, arg_C2_ccombinewnewt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_ccombinewnewt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_C2_ccombinewnewf(DisasContext *ctx, arg_C2_ccombinewnewf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_ccombinewnewf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_C2_ccombinewt(DisasContext *ctx, arg_C2_ccombinewt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_ccombinewt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_C2_ccombinewf(DisasContext *ctx, arg_C2_ccombinewf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_ccombinewf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rdd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_C2_muxii(DisasContext *ctx, arg_C2_muxii *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_muxii;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Pu;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_C2_muxir(DisasContext *ctx, arg_C2_muxir *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_muxir;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Pu;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_muxri(DisasContext *ctx, arg_C2_muxri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_muxri;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Pu;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C2_vmux(DisasContext *ctx, arg_C2_vmux *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_vmux;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Pu;
    insn->regno[2] = args->Rss;
    insn->regno[3] = args->Rtt;
    return true;
}
static bool trans_C2_mask(DisasContext *ctx, arg_C2_mask *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_mask;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Pt;
    return true;
}
static bool trans_A2_vcmpbeq(DisasContext *ctx, arg_A2_vcmpbeq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmpbeq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_vcmpbeqi(DisasContext *ctx, arg_A4_vcmpbeqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpbeqi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_vcmpbeq_any(DisasContext *ctx, arg_A4_vcmpbeq_any *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpbeq_any;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A6_vcmpbeq_notany(DisasContext *ctx, arg_A6_vcmpbeq_notany *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A6_vcmpbeq_notany;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vcmpbgtu(DisasContext *ctx, arg_A2_vcmpbgtu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmpbgtu;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_vcmpbgtui(DisasContext *ctx, arg_A4_vcmpbgtui *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpbgtui;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_vcmpbgt(DisasContext *ctx, arg_A4_vcmpbgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpbgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_vcmpbgti(DisasContext *ctx, arg_A4_vcmpbgti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpbgti;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_cmpbeq(DisasContext *ctx, arg_A4_cmpbeq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpbeq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_cmpbeqi(DisasContext *ctx, arg_A4_cmpbeqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpbeqi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_cmpbgtu(DisasContext *ctx, arg_A4_cmpbgtu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpbgtu;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_cmpbgtui(DisasContext *ctx, arg_A4_cmpbgtui *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpbgtui;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_cmpbgt(DisasContext *ctx, arg_A4_cmpbgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpbgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_cmpbgti(DisasContext *ctx, arg_A4_cmpbgti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpbgti;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_vcmpheq(DisasContext *ctx, arg_A2_vcmpheq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmpheq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vcmphgt(DisasContext *ctx, arg_A2_vcmphgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmphgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vcmphgtu(DisasContext *ctx, arg_A2_vcmphgtu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmphgtu;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_vcmpheqi(DisasContext *ctx, arg_A4_vcmpheqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpheqi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_vcmphgti(DisasContext *ctx, arg_A4_vcmphgti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmphgti;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_vcmphgtui(DisasContext *ctx, arg_A4_vcmphgtui *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmphgtui;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_cmpheq(DisasContext *ctx, arg_A4_cmpheq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpheq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_cmphgt(DisasContext *ctx, arg_A4_cmphgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmphgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_cmphgtu(DisasContext *ctx, arg_A4_cmphgtu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmphgtu;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_cmpheqi(DisasContext *ctx, arg_A4_cmpheqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmpheqi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_cmphgti(DisasContext *ctx, arg_A4_cmphgti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmphgti;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_cmphgtui(DisasContext *ctx, arg_A4_cmphgtui *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cmphgtui;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A2_vcmpweq(DisasContext *ctx, arg_A2_vcmpweq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmpweq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vcmpwgt(DisasContext *ctx, arg_A2_vcmpwgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmpwgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vcmpwgtu(DisasContext *ctx, arg_A2_vcmpwgtu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vcmpwgtu;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_vcmpweqi(DisasContext *ctx, arg_A4_vcmpweqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpweqi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_vcmpwgti(DisasContext *ctx, arg_A4_vcmpwgti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpwgti;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_vcmpwgtui(DisasContext *ctx, arg_A4_vcmpwgtui *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vcmpwgtui;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_boundscheck_hi(DisasContext *ctx, arg_A4_boundscheck_hi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_boundscheck_hi;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_boundscheck_lo(DisasContext *ctx, arg_A4_boundscheck_lo *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_boundscheck_lo;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_tlbmatch(DisasContext *ctx, arg_A4_tlbmatch *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_tlbmatch;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_C2_tfrpr(DisasContext *ctx, arg_C2_tfrpr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_tfrpr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Ps;
    return true;
}
static bool trans_C2_tfrrp(DisasContext *ctx, arg_C2_tfrrp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C2_tfrrp;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_C4_fastcorner9(DisasContext *ctx, arg_C4_fastcorner9 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_fastcorner9;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    return true;
}
static bool trans_C4_fastcorner9_not(DisasContext *ctx, arg_C4_fastcorner9_not *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_fastcorner9_not;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Ps;
    insn->regno[2] = args->Pt;
    return true;
}
static bool trans_M2_mpy_acc_hh_s0(DisasContext *ctx, arg_M2_mpy_acc_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_hh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_hh_s1(DisasContext *ctx, arg_M2_mpy_acc_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_hh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_hl_s0(DisasContext *ctx, arg_M2_mpy_acc_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_hl_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_hl_s1(DisasContext *ctx, arg_M2_mpy_acc_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_hl_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_lh_s0(DisasContext *ctx, arg_M2_mpy_acc_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_lh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_lh_s1(DisasContext *ctx, arg_M2_mpy_acc_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_lh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_ll_s0(DisasContext *ctx, arg_M2_mpy_acc_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_ll_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_ll_s1(DisasContext *ctx, arg_M2_mpy_acc_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_ll_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_hh_s0(DisasContext *ctx, arg_M2_mpy_nac_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_hh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_hh_s1(DisasContext *ctx, arg_M2_mpy_nac_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_hh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_hl_s0(DisasContext *ctx, arg_M2_mpy_nac_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_hl_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_hl_s1(DisasContext *ctx, arg_M2_mpy_nac_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_hl_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_lh_s0(DisasContext *ctx, arg_M2_mpy_nac_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_lh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_lh_s1(DisasContext *ctx, arg_M2_mpy_nac_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_lh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_ll_s0(DisasContext *ctx, arg_M2_mpy_nac_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_ll_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_ll_s1(DisasContext *ctx, arg_M2_mpy_nac_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_ll_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_hh_s0(DisasContext *ctx, arg_M2_mpy_acc_sat_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_hh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_hh_s1(DisasContext *ctx, arg_M2_mpy_acc_sat_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_hh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_hl_s0(DisasContext *ctx, arg_M2_mpy_acc_sat_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_hl_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_hl_s1(DisasContext *ctx, arg_M2_mpy_acc_sat_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_hl_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_lh_s0(DisasContext *ctx, arg_M2_mpy_acc_sat_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_lh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_lh_s1(DisasContext *ctx, arg_M2_mpy_acc_sat_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_lh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_ll_s0(DisasContext *ctx, arg_M2_mpy_acc_sat_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_ll_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_acc_sat_ll_s1(DisasContext *ctx, arg_M2_mpy_acc_sat_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_acc_sat_ll_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_hh_s0(DisasContext *ctx, arg_M2_mpy_nac_sat_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_hh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_hh_s1(DisasContext *ctx, arg_M2_mpy_nac_sat_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_hh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_hl_s0(DisasContext *ctx, arg_M2_mpy_nac_sat_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_hl_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_hl_s1(DisasContext *ctx, arg_M2_mpy_nac_sat_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_hl_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_lh_s0(DisasContext *ctx, arg_M2_mpy_nac_sat_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_lh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_lh_s1(DisasContext *ctx, arg_M2_mpy_nac_sat_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_lh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_ll_s0(DisasContext *ctx, arg_M2_mpy_nac_sat_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_ll_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_nac_sat_ll_s1(DisasContext *ctx, arg_M2_mpy_nac_sat_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_nac_sat_ll_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_hh_s0(DisasContext *ctx, arg_M2_mpy_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_hh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_hh_s1(DisasContext *ctx, arg_M2_mpy_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_hh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_hl_s0(DisasContext *ctx, arg_M2_mpy_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_hl_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_hl_s1(DisasContext *ctx, arg_M2_mpy_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_hl_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_lh_s0(DisasContext *ctx, arg_M2_mpy_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_lh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_lh_s1(DisasContext *ctx, arg_M2_mpy_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_lh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_ll_s0(DisasContext *ctx, arg_M2_mpy_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_ll_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_ll_s1(DisasContext *ctx, arg_M2_mpy_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_ll_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_hh_s0(DisasContext *ctx, arg_M2_mpy_sat_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_hh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_hh_s1(DisasContext *ctx, arg_M2_mpy_sat_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_hh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_hl_s0(DisasContext *ctx, arg_M2_mpy_sat_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_hl_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_hl_s1(DisasContext *ctx, arg_M2_mpy_sat_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_hl_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_lh_s0(DisasContext *ctx, arg_M2_mpy_sat_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_lh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_lh_s1(DisasContext *ctx, arg_M2_mpy_sat_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_lh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_ll_s0(DisasContext *ctx, arg_M2_mpy_sat_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_ll_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_ll_s1(DisasContext *ctx, arg_M2_mpy_sat_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_ll_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_hh_s0(DisasContext *ctx, arg_M2_mpy_rnd_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_hh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_hh_s1(DisasContext *ctx, arg_M2_mpy_rnd_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_hh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_hl_s0(DisasContext *ctx, arg_M2_mpy_rnd_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_hl_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_hl_s1(DisasContext *ctx, arg_M2_mpy_rnd_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_hl_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_lh_s0(DisasContext *ctx, arg_M2_mpy_rnd_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_lh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_lh_s1(DisasContext *ctx, arg_M2_mpy_rnd_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_lh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_ll_s0(DisasContext *ctx, arg_M2_mpy_rnd_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_ll_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_rnd_ll_s1(DisasContext *ctx, arg_M2_mpy_rnd_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_rnd_ll_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_hh_s0(DisasContext *ctx, arg_M2_mpy_sat_rnd_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_hh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_hh_s1(DisasContext *ctx, arg_M2_mpy_sat_rnd_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_hh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_hl_s0(DisasContext *ctx, arg_M2_mpy_sat_rnd_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_hl_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_hl_s1(DisasContext *ctx, arg_M2_mpy_sat_rnd_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_hl_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_lh_s0(DisasContext *ctx, arg_M2_mpy_sat_rnd_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_lh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_lh_s1(DisasContext *ctx, arg_M2_mpy_sat_rnd_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_lh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_ll_s0(DisasContext *ctx, arg_M2_mpy_sat_rnd_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_ll_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_sat_rnd_ll_s1(DisasContext *ctx, arg_M2_mpy_sat_rnd_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_sat_rnd_ll_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_hh_s0(DisasContext *ctx, arg_M2_mpyd_acc_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_hh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_hh_s1(DisasContext *ctx, arg_M2_mpyd_acc_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_hh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_hl_s0(DisasContext *ctx, arg_M2_mpyd_acc_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_hl_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_hl_s1(DisasContext *ctx, arg_M2_mpyd_acc_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_hl_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_lh_s0(DisasContext *ctx, arg_M2_mpyd_acc_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_lh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_lh_s1(DisasContext *ctx, arg_M2_mpyd_acc_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_lh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_ll_s0(DisasContext *ctx, arg_M2_mpyd_acc_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_ll_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_acc_ll_s1(DisasContext *ctx, arg_M2_mpyd_acc_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_acc_ll_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_hh_s0(DisasContext *ctx, arg_M2_mpyd_nac_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_hh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_hh_s1(DisasContext *ctx, arg_M2_mpyd_nac_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_hh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_hl_s0(DisasContext *ctx, arg_M2_mpyd_nac_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_hl_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_hl_s1(DisasContext *ctx, arg_M2_mpyd_nac_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_hl_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_lh_s0(DisasContext *ctx, arg_M2_mpyd_nac_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_lh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_lh_s1(DisasContext *ctx, arg_M2_mpyd_nac_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_lh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_ll_s0(DisasContext *ctx, arg_M2_mpyd_nac_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_ll_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_nac_ll_s1(DisasContext *ctx, arg_M2_mpyd_nac_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_nac_ll_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_hh_s0(DisasContext *ctx, arg_M2_mpyd_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_hh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_hh_s1(DisasContext *ctx, arg_M2_mpyd_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_hh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_hl_s0(DisasContext *ctx, arg_M2_mpyd_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_hl_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_hl_s1(DisasContext *ctx, arg_M2_mpyd_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_hl_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_lh_s0(DisasContext *ctx, arg_M2_mpyd_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_lh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_lh_s1(DisasContext *ctx, arg_M2_mpyd_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_lh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_ll_s0(DisasContext *ctx, arg_M2_mpyd_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_ll_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_ll_s1(DisasContext *ctx, arg_M2_mpyd_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_ll_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_hh_s0(DisasContext *ctx, arg_M2_mpyd_rnd_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_hh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_hh_s1(DisasContext *ctx, arg_M2_mpyd_rnd_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_hh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_hl_s0(DisasContext *ctx, arg_M2_mpyd_rnd_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_hl_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_hl_s1(DisasContext *ctx, arg_M2_mpyd_rnd_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_hl_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_lh_s0(DisasContext *ctx, arg_M2_mpyd_rnd_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_lh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_lh_s1(DisasContext *ctx, arg_M2_mpyd_rnd_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_lh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_ll_s0(DisasContext *ctx, arg_M2_mpyd_rnd_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_ll_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyd_rnd_ll_s1(DisasContext *ctx, arg_M2_mpyd_rnd_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyd_rnd_ll_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_hh_s0(DisasContext *ctx, arg_M2_mpyu_acc_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_hh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_hh_s1(DisasContext *ctx, arg_M2_mpyu_acc_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_hh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_hl_s0(DisasContext *ctx, arg_M2_mpyu_acc_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_hl_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_hl_s1(DisasContext *ctx, arg_M2_mpyu_acc_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_hl_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_lh_s0(DisasContext *ctx, arg_M2_mpyu_acc_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_lh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_lh_s1(DisasContext *ctx, arg_M2_mpyu_acc_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_lh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_ll_s0(DisasContext *ctx, arg_M2_mpyu_acc_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_ll_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_acc_ll_s1(DisasContext *ctx, arg_M2_mpyu_acc_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_acc_ll_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_hh_s0(DisasContext *ctx, arg_M2_mpyu_nac_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_hh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_hh_s1(DisasContext *ctx, arg_M2_mpyu_nac_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_hh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_hl_s0(DisasContext *ctx, arg_M2_mpyu_nac_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_hl_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_hl_s1(DisasContext *ctx, arg_M2_mpyu_nac_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_hl_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_lh_s0(DisasContext *ctx, arg_M2_mpyu_nac_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_lh_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_lh_s1(DisasContext *ctx, arg_M2_mpyu_nac_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_lh_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_ll_s0(DisasContext *ctx, arg_M2_mpyu_nac_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_ll_s0;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_nac_ll_s1(DisasContext *ctx, arg_M2_mpyu_nac_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_nac_ll_s1;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_hh_s0(DisasContext *ctx, arg_M2_mpyu_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_hh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_hh_s1(DisasContext *ctx, arg_M2_mpyu_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_hh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_hl_s0(DisasContext *ctx, arg_M2_mpyu_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_hl_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_hl_s1(DisasContext *ctx, arg_M2_mpyu_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_hl_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_lh_s0(DisasContext *ctx, arg_M2_mpyu_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_lh_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_lh_s1(DisasContext *ctx, arg_M2_mpyu_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_lh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_ll_s0(DisasContext *ctx, arg_M2_mpyu_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_ll_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_ll_s1(DisasContext *ctx, arg_M2_mpyu_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_ll_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_hh_s0(DisasContext *ctx, arg_M2_mpyud_acc_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_hh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_hh_s1(DisasContext *ctx, arg_M2_mpyud_acc_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_hh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_hl_s0(DisasContext *ctx, arg_M2_mpyud_acc_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_hl_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_hl_s1(DisasContext *ctx, arg_M2_mpyud_acc_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_hl_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_lh_s0(DisasContext *ctx, arg_M2_mpyud_acc_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_lh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_lh_s1(DisasContext *ctx, arg_M2_mpyud_acc_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_lh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_ll_s0(DisasContext *ctx, arg_M2_mpyud_acc_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_ll_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_acc_ll_s1(DisasContext *ctx, arg_M2_mpyud_acc_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_acc_ll_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_hh_s0(DisasContext *ctx, arg_M2_mpyud_nac_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_hh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_hh_s1(DisasContext *ctx, arg_M2_mpyud_nac_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_hh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_hl_s0(DisasContext *ctx, arg_M2_mpyud_nac_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_hl_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_hl_s1(DisasContext *ctx, arg_M2_mpyud_nac_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_hl_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_lh_s0(DisasContext *ctx, arg_M2_mpyud_nac_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_lh_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_lh_s1(DisasContext *ctx, arg_M2_mpyud_nac_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_lh_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_ll_s0(DisasContext *ctx, arg_M2_mpyud_nac_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_ll_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_nac_ll_s1(DisasContext *ctx, arg_M2_mpyud_nac_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_nac_ll_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_hh_s0(DisasContext *ctx, arg_M2_mpyud_hh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_hh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_hh_s1(DisasContext *ctx, arg_M2_mpyud_hh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_hh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_hl_s0(DisasContext *ctx, arg_M2_mpyud_hl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_hl_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_hl_s1(DisasContext *ctx, arg_M2_mpyud_hl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_hl_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_lh_s0(DisasContext *ctx, arg_M2_mpyud_lh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_lh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_lh_s1(DisasContext *ctx, arg_M2_mpyud_lh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_lh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_ll_s0(DisasContext *ctx, arg_M2_mpyud_ll_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_ll_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyud_ll_s1(DisasContext *ctx, arg_M2_mpyud_ll_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyud_ll_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpysip(DisasContext *ctx, arg_M2_mpysip *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpysip;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_M2_mpysin(DisasContext *ctx, arg_M2_mpysin *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpysin;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_M2_macsip(DisasContext *ctx, arg_M2_macsip *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_macsip;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_M2_macsin(DisasContext *ctx, arg_M2_macsin *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_macsin;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_M2_dpmpyss_s0(DisasContext *ctx, arg_M2_dpmpyss_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_dpmpyss_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_dpmpyss_acc_s0(DisasContext *ctx, arg_M2_dpmpyss_acc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_dpmpyss_acc_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_dpmpyss_nac_s0(DisasContext *ctx, arg_M2_dpmpyss_nac_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_dpmpyss_nac_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_dpmpyuu_s0(DisasContext *ctx, arg_M2_dpmpyuu_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_dpmpyuu_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_dpmpyuu_acc_s0(DisasContext *ctx, arg_M2_dpmpyuu_acc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_dpmpyuu_acc_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_dpmpyuu_nac_s0(DisasContext *ctx, arg_M2_dpmpyuu_nac_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_dpmpyuu_nac_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_up(DisasContext *ctx, arg_M2_mpy_up *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_up;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_up_s1(DisasContext *ctx, arg_M2_mpy_up_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_up_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpy_up_s1_sat(DisasContext *ctx, arg_M2_mpy_up_s1_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpy_up_s1_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyu_up(DisasContext *ctx, arg_M2_mpyu_up *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyu_up;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpysu_up(DisasContext *ctx, arg_M2_mpysu_up *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpysu_up;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_dpmpyss_rnd_s0(DisasContext *ctx, arg_M2_dpmpyss_rnd_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_dpmpyss_rnd_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_mac_up_s1_sat(DisasContext *ctx, arg_M4_mac_up_s1_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_mac_up_s1_sat;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_nac_up_s1_sat(DisasContext *ctx, arg_M4_nac_up_s1_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_nac_up_s1_sat;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mpyi(DisasContext *ctx, arg_M2_mpyi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mpyi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_maci(DisasContext *ctx, arg_M2_maci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_maci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mnaci(DisasContext *ctx, arg_M2_mnaci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mnaci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_acci(DisasContext *ctx, arg_M2_acci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_acci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_accii(DisasContext *ctx, arg_M2_accii *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_accii;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_M2_nacci(DisasContext *ctx, arg_M2_nacci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_nacci;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_naccii(DisasContext *ctx, arg_M2_naccii *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_naccii;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_M2_subacc(DisasContext *ctx, arg_M2_subacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_subacc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_M4_mpyrr_addr(DisasContext *ctx, arg_M4_mpyrr_addr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_mpyrr_addr;
    insn->regno[0] = args->Ry;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_M4_mpyri_addr_u2(DisasContext *ctx, arg_M4_mpyri_addr_u2 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_mpyri_addr_u2;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_M4_mpyri_addr(DisasContext *ctx, arg_M4_mpyri_addr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_mpyri_addr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Ru;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_M4_mpyri_addi(DisasContext *ctx, arg_M4_mpyri_addi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_mpyri_addi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_M4_mpyrr_addi(DisasContext *ctx, arg_M4_mpyrr_addi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_mpyrr_addi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_M2_vmpy2s_s0(DisasContext *ctx, arg_M2_vmpy2s_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2s_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmpy2s_s1(DisasContext *ctx, arg_M2_vmpy2s_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2s_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmac2s_s0(DisasContext *ctx, arg_M2_vmac2s_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2s_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmac2s_s1(DisasContext *ctx, arg_M2_vmac2s_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2s_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmpy2su_s0(DisasContext *ctx, arg_M2_vmpy2su_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2su_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmpy2su_s1(DisasContext *ctx, arg_M2_vmpy2su_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2su_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmac2su_s0(DisasContext *ctx, arg_M2_vmac2su_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2su_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmac2su_s1(DisasContext *ctx, arg_M2_vmac2su_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2su_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmpy2s_s0pack(DisasContext *ctx, arg_M2_vmpy2s_s0pack *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2s_s0pack;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmpy2s_s1pack(DisasContext *ctx, arg_M2_vmpy2s_s1pack *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2s_s1pack;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmac2(DisasContext *ctx, arg_M2_vmac2 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vmpy2es_s0(DisasContext *ctx, arg_M2_vmpy2es_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2es_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vmpy2es_s1(DisasContext *ctx, arg_M2_vmpy2es_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmpy2es_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vmac2es_s0(DisasContext *ctx, arg_M2_vmac2es_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2es_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vmac2es_s1(DisasContext *ctx, arg_M2_vmac2es_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2es_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vmac2es(DisasContext *ctx, arg_M2_vmac2es *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vmac2es;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrmac_s0(DisasContext *ctx, arg_M2_vrmac_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrmac_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrmpy_s0(DisasContext *ctx, arg_M2_vrmpy_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrmpy_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vdmpyrs_s0(DisasContext *ctx, arg_M2_vdmpyrs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vdmpyrs_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vdmpyrs_s1(DisasContext *ctx, arg_M2_vdmpyrs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vdmpyrs_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M5_vrmpybuu(DisasContext *ctx, arg_M5_vrmpybuu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vrmpybuu;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M5_vrmacbuu(DisasContext *ctx, arg_M5_vrmacbuu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vrmacbuu;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M5_vrmpybsu(DisasContext *ctx, arg_M5_vrmpybsu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vrmpybsu;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M5_vrmacbsu(DisasContext *ctx, arg_M5_vrmacbsu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vrmacbsu;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M5_vmpybuu(DisasContext *ctx, arg_M5_vmpybuu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vmpybuu;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M5_vmpybsu(DisasContext *ctx, arg_M5_vmpybsu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vmpybsu;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M5_vmacbuu(DisasContext *ctx, arg_M5_vmacbuu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vmacbuu;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M5_vmacbsu(DisasContext *ctx, arg_M5_vmacbsu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vmacbsu;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M5_vdmpybsu(DisasContext *ctx, arg_M5_vdmpybsu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vdmpybsu;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M5_vdmacbsu(DisasContext *ctx, arg_M5_vdmacbsu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M5_vdmacbsu;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vdmacs_s0(DisasContext *ctx, arg_M2_vdmacs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vdmacs_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vdmacs_s1(DisasContext *ctx, arg_M2_vdmacs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vdmacs_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vdmpys_s0(DisasContext *ctx, arg_M2_vdmpys_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vdmpys_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vdmpys_s1(DisasContext *ctx, arg_M2_vdmpys_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vdmpys_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_cmpyrs_s0(DisasContext *ctx, arg_M2_cmpyrs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpyrs_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpyrs_s1(DisasContext *ctx, arg_M2_cmpyrs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpyrs_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpyrsc_s0(DisasContext *ctx, arg_M2_cmpyrsc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpyrsc_s0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpyrsc_s1(DisasContext *ctx, arg_M2_cmpyrsc_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpyrsc_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmacs_s0(DisasContext *ctx, arg_M2_cmacs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmacs_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmacs_s1(DisasContext *ctx, arg_M2_cmacs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmacs_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmacsc_s0(DisasContext *ctx, arg_M2_cmacsc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmacsc_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmacsc_s1(DisasContext *ctx, arg_M2_cmacsc_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmacsc_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpys_s0(DisasContext *ctx, arg_M2_cmpys_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpys_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpys_s1(DisasContext *ctx, arg_M2_cmpys_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpys_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpysc_s0(DisasContext *ctx, arg_M2_cmpysc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpysc_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpysc_s1(DisasContext *ctx, arg_M2_cmpysc_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpysc_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cnacs_s0(DisasContext *ctx, arg_M2_cnacs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cnacs_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cnacs_s1(DisasContext *ctx, arg_M2_cnacs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cnacs_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cnacsc_s0(DisasContext *ctx, arg_M2_cnacsc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cnacsc_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cnacsc_s1(DisasContext *ctx, arg_M2_cnacsc_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cnacsc_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vrcmpys_s1_h(DisasContext *ctx, arg_M2_vrcmpys_s1_h *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpys_s1_h;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpys_s1_l(DisasContext *ctx, arg_M2_vrcmpys_s1_l *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpys_s1_l;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpys_acc_s1_h(DisasContext *ctx, arg_M2_vrcmpys_acc_s1_h *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpys_acc_s1_h;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpys_acc_s1_l(DisasContext *ctx, arg_M2_vrcmpys_acc_s1_l *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpys_acc_s1_l;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpys_s1rp_h(DisasContext *ctx, arg_M2_vrcmpys_s1rp_h *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpys_s1rp_h;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpys_s1rp_l(DisasContext *ctx, arg_M2_vrcmpys_s1rp_l *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpys_s1rp_l;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacls_s0(DisasContext *ctx, arg_M2_mmacls_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacls_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacls_s1(DisasContext *ctx, arg_M2_mmacls_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacls_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmachs_s0(DisasContext *ctx, arg_M2_mmachs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmachs_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmachs_s1(DisasContext *ctx, arg_M2_mmachs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmachs_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyl_s0(DisasContext *ctx, arg_M2_mmpyl_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyl_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyl_s1(DisasContext *ctx, arg_M2_mmpyl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyl_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyh_s0(DisasContext *ctx, arg_M2_mmpyh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyh_s1(DisasContext *ctx, arg_M2_mmpyh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacls_rs0(DisasContext *ctx, arg_M2_mmacls_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacls_rs0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacls_rs1(DisasContext *ctx, arg_M2_mmacls_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacls_rs1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmachs_rs0(DisasContext *ctx, arg_M2_mmachs_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmachs_rs0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmachs_rs1(DisasContext *ctx, arg_M2_mmachs_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmachs_rs1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyl_rs0(DisasContext *ctx, arg_M2_mmpyl_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyl_rs0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyl_rs1(DisasContext *ctx, arg_M2_mmpyl_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyl_rs1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyh_rs0(DisasContext *ctx, arg_M2_mmpyh_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyh_rs0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyh_rs1(DisasContext *ctx, arg_M2_mmpyh_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyh_rs1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyeh_s0(DisasContext *ctx, arg_M4_vrmpyeh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyeh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyeh_s1(DisasContext *ctx, arg_M4_vrmpyeh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyeh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyeh_acc_s0(DisasContext *ctx, arg_M4_vrmpyeh_acc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyeh_acc_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyeh_acc_s1(DisasContext *ctx, arg_M4_vrmpyeh_acc_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyeh_acc_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyoh_s0(DisasContext *ctx, arg_M4_vrmpyoh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyoh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyoh_s1(DisasContext *ctx, arg_M4_vrmpyoh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyoh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyoh_acc_s0(DisasContext *ctx, arg_M4_vrmpyoh_acc_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyoh_acc_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M4_vrmpyoh_acc_s1(DisasContext *ctx, arg_M4_vrmpyoh_acc_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vrmpyoh_acc_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_hmmpyl_rs1(DisasContext *ctx, arg_M2_hmmpyl_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_hmmpyl_rs1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_hmmpyh_rs1(DisasContext *ctx, arg_M2_hmmpyh_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_hmmpyh_rs1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_hmmpyl_s1(DisasContext *ctx, arg_M2_hmmpyl_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_hmmpyl_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_hmmpyh_s1(DisasContext *ctx, arg_M2_hmmpyh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_hmmpyh_s1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_mmaculs_s0(DisasContext *ctx, arg_M2_mmaculs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmaculs_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmaculs_s1(DisasContext *ctx, arg_M2_mmaculs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmaculs_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacuhs_s0(DisasContext *ctx, arg_M2_mmacuhs_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacuhs_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacuhs_s1(DisasContext *ctx, arg_M2_mmacuhs_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacuhs_s1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyul_s0(DisasContext *ctx, arg_M2_mmpyul_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyul_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyul_s1(DisasContext *ctx, arg_M2_mmpyul_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyul_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyuh_s0(DisasContext *ctx, arg_M2_mmpyuh_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyuh_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyuh_s1(DisasContext *ctx, arg_M2_mmpyuh_s1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyuh_s1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmaculs_rs0(DisasContext *ctx, arg_M2_mmaculs_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmaculs_rs0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmaculs_rs1(DisasContext *ctx, arg_M2_mmaculs_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmaculs_rs1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacuhs_rs0(DisasContext *ctx, arg_M2_mmacuhs_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacuhs_rs0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmacuhs_rs1(DisasContext *ctx, arg_M2_mmacuhs_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmacuhs_rs1;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyul_rs0(DisasContext *ctx, arg_M2_mmpyul_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyul_rs0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyul_rs1(DisasContext *ctx, arg_M2_mmpyul_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyul_rs1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyuh_rs0(DisasContext *ctx, arg_M2_mmpyuh_rs0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyuh_rs0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_mmpyuh_rs1(DisasContext *ctx, arg_M2_mmpyuh_rs1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_mmpyuh_rs1;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmaci_s0(DisasContext *ctx, arg_M2_vrcmaci_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmaci_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmacr_s0(DisasContext *ctx, arg_M2_vrcmacr_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmacr_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmaci_s0c(DisasContext *ctx, arg_M2_vrcmaci_s0c *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmaci_s0c;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmacr_s0c(DisasContext *ctx, arg_M2_vrcmacr_s0c *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmacr_s0c;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_cmaci_s0(DisasContext *ctx, arg_M2_cmaci_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmaci_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmacr_s0(DisasContext *ctx, arg_M2_cmacr_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmacr_s0;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vrcmpyi_s0(DisasContext *ctx, arg_M2_vrcmpyi_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpyi_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpyr_s0(DisasContext *ctx, arg_M2_vrcmpyr_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpyr_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpyi_s0c(DisasContext *ctx, arg_M2_vrcmpyi_s0c *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpyi_s0c;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vrcmpyr_s0c(DisasContext *ctx, arg_M2_vrcmpyr_s0c *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vrcmpyr_s0c;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_cmpyi_s0(DisasContext *ctx, arg_M2_cmpyi_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpyi_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_cmpyr_s0(DisasContext *ctx, arg_M2_cmpyr_s0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_cmpyr_s0;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_cmpyi_wh(DisasContext *ctx, arg_M4_cmpyi_wh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_cmpyi_wh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_cmpyr_wh(DisasContext *ctx, arg_M4_cmpyr_wh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_cmpyr_wh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_cmpyi_whc(DisasContext *ctx, arg_M4_cmpyi_whc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_cmpyi_whc;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_cmpyr_whc(DisasContext *ctx, arg_M4_cmpyr_whc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_cmpyr_whc;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_vcmpy_s0_sat_i(DisasContext *ctx, arg_M2_vcmpy_s0_sat_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vcmpy_s0_sat_i;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vcmpy_s0_sat_r(DisasContext *ctx, arg_M2_vcmpy_s0_sat_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vcmpy_s0_sat_r;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vcmpy_s1_sat_i(DisasContext *ctx, arg_M2_vcmpy_s1_sat_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vcmpy_s1_sat_i;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vcmpy_s1_sat_r(DisasContext *ctx, arg_M2_vcmpy_s1_sat_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vcmpy_s1_sat_r;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vcmac_s0_sat_i(DisasContext *ctx, arg_M2_vcmac_s0_sat_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vcmac_s0_sat_i;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vcmac_s0_sat_r(DisasContext *ctx, arg_M2_vcmac_s0_sat_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vcmac_s0_sat_r;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_vcrotate(DisasContext *ctx, arg_S2_vcrotate *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vcrotate;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_vrcrotate_acc(DisasContext *ctx, arg_S4_vrcrotate_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vrcrotate_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_vrcrotate(DisasContext *ctx, arg_S4_vrcrotate *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vrcrotate;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_vcnegh(DisasContext *ctx, arg_S2_vcnegh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vcnegh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_vrcnegh(DisasContext *ctx, arg_S2_vrcnegh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vrcnegh;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_pmpyw(DisasContext *ctx, arg_M4_pmpyw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_pmpyw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_vpmpyh(DisasContext *ctx, arg_M4_vpmpyh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vpmpyh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_pmpyw_acc(DisasContext *ctx, arg_M4_pmpyw_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_pmpyw_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_vpmpyh_acc(DisasContext *ctx, arg_M4_vpmpyh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_vpmpyh_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M7_dcmpyrw(DisasContext *ctx, arg_M7_dcmpyrw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyrw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_dcmpyrw_acc(DisasContext *ctx, arg_M7_dcmpyrw_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyrw_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_dcmpyrwc(DisasContext *ctx, arg_M7_dcmpyrwc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyrwc;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_dcmpyrwc_acc(DisasContext *ctx, arg_M7_dcmpyrwc_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyrwc_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_dcmpyiw(DisasContext *ctx, arg_M7_dcmpyiw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyiw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_dcmpyiw_acc(DisasContext *ctx, arg_M7_dcmpyiw_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyiw_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_dcmpyiwc(DisasContext *ctx, arg_M7_dcmpyiwc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyiwc;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_dcmpyiwc_acc(DisasContext *ctx, arg_M7_dcmpyiwc_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_dcmpyiwc_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyrw(DisasContext *ctx, arg_M7_wcmpyrw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyrw;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyrwc(DisasContext *ctx, arg_M7_wcmpyrwc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyrwc;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyiw(DisasContext *ctx, arg_M7_wcmpyiw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyiw;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyiwc(DisasContext *ctx, arg_M7_wcmpyiwc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyiwc;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyrw_rnd(DisasContext *ctx, arg_M7_wcmpyrw_rnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyrw_rnd;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyrwc_rnd(DisasContext *ctx, arg_M7_wcmpyrwc_rnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyrwc_rnd;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyiw_rnd(DisasContext *ctx, arg_M7_wcmpyiw_rnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyiw_rnd;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M7_wcmpyiwc_rnd(DisasContext *ctx, arg_M7_wcmpyiwc_rnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M7_wcmpyiwc_rnd;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_add(DisasContext *ctx, arg_A2_add *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_add;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_sub(DisasContext *ctx, arg_A2_sub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_sub;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_paddt(DisasContext *ctx, arg_A2_paddt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_paddt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_paddf(DisasContext *ctx, arg_A2_paddf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_paddf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_paddtnew(DisasContext *ctx, arg_A2_paddtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_paddtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_paddfnew(DisasContext *ctx, arg_A2_paddfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_paddfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_psubt(DisasContext *ctx, arg_A2_psubt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_psubt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rt;
    insn->regno[3] = args->Rs;
    return true;
}
static bool trans_A2_psubf(DisasContext *ctx, arg_A2_psubf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_psubf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rt;
    insn->regno[3] = args->Rs;
    return true;
}
static bool trans_A2_psubtnew(DisasContext *ctx, arg_A2_psubtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_psubtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rt;
    insn->regno[3] = args->Rs;
    return true;
}
static bool trans_A2_psubfnew(DisasContext *ctx, arg_A2_psubfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_psubfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rt;
    insn->regno[3] = args->Rs;
    return true;
}
static bool trans_A2_paddit(DisasContext *ctx, arg_A2_paddit *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_paddit;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_paddif(DisasContext *ctx, arg_A2_paddif *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_paddif;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_padditnew(DisasContext *ctx, arg_A2_padditnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_padditnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_paddifnew(DisasContext *ctx, arg_A2_paddifnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_paddifnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_pxort(DisasContext *ctx, arg_A2_pxort *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pxort;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_pxorf(DisasContext *ctx, arg_A2_pxorf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pxorf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_pxortnew(DisasContext *ctx, arg_A2_pxortnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pxortnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_pxorfnew(DisasContext *ctx, arg_A2_pxorfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pxorfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_pandt(DisasContext *ctx, arg_A2_pandt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pandt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_pandf(DisasContext *ctx, arg_A2_pandf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pandf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_pandtnew(DisasContext *ctx, arg_A2_pandtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pandtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_pandfnew(DisasContext *ctx, arg_A2_pandfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_pandfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_port(DisasContext *ctx, arg_A2_port *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_port;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_porf(DisasContext *ctx, arg_A2_porf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_porf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_portnew(DisasContext *ctx, arg_A2_portnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_portnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A2_porfnew(DisasContext *ctx, arg_A2_porfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_porfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_A4_psxtbt(DisasContext *ctx, arg_A4_psxtbt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxtbt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_psxtbf(DisasContext *ctx, arg_A4_psxtbf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxtbf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_psxtbtnew(DisasContext *ctx, arg_A4_psxtbtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxtbtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_psxtbfnew(DisasContext *ctx, arg_A4_psxtbfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxtbfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxtbt(DisasContext *ctx, arg_A4_pzxtbt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxtbt;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxtbf(DisasContext *ctx, arg_A4_pzxtbf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxtbf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxtbtnew(DisasContext *ctx, arg_A4_pzxtbtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxtbtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxtbfnew(DisasContext *ctx, arg_A4_pzxtbfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxtbfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_psxtht(DisasContext *ctx, arg_A4_psxtht *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxtht;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_psxthf(DisasContext *ctx, arg_A4_psxthf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxthf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_psxthtnew(DisasContext *ctx, arg_A4_psxthtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxthtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_psxthfnew(DisasContext *ctx, arg_A4_psxthfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_psxthfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxtht(DisasContext *ctx, arg_A4_pzxtht *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxtht;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxthf(DisasContext *ctx, arg_A4_pzxthf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxthf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxthtnew(DisasContext *ctx, arg_A4_pzxthtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxthtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pzxthfnew(DisasContext *ctx, arg_A4_pzxthfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pzxthfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_paslht(DisasContext *ctx, arg_A4_paslht *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_paslht;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_paslhf(DisasContext *ctx, arg_A4_paslhf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_paslhf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_paslhtnew(DisasContext *ctx, arg_A4_paslhtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_paslhtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_paslhfnew(DisasContext *ctx, arg_A4_paslhfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_paslhfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pasrht(DisasContext *ctx, arg_A4_pasrht *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pasrht;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pasrhf(DisasContext *ctx, arg_A4_pasrhf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pasrhf;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pasrhtnew(DisasContext *ctx, arg_A4_pasrhtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pasrhtnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_pasrhfnew(DisasContext *ctx, arg_A4_pasrhfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_pasrhfnew;
    insn->regno[0] = args->Pu;
    insn->regno[1] = args->Rd;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addsat(DisasContext *ctx, arg_A2_addsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addsat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_subsat(DisasContext *ctx, arg_A2_subsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subsat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addi(DisasContext *ctx, arg_A2_addi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_C4_addipc(DisasContext *ctx, arg_C4_addipc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = C4_addipc;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A2_addh_l16_ll(DisasContext *ctx, arg_A2_addh_l16_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_l16_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_l16_hl(DisasContext *ctx, arg_A2_addh_l16_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_l16_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_l16_sat_ll(DisasContext *ctx, arg_A2_addh_l16_sat_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_l16_sat_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_l16_sat_hl(DisasContext *ctx, arg_A2_addh_l16_sat_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_l16_sat_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_l16_ll(DisasContext *ctx, arg_A2_subh_l16_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_l16_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_l16_hl(DisasContext *ctx, arg_A2_subh_l16_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_l16_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_l16_sat_ll(DisasContext *ctx, arg_A2_subh_l16_sat_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_l16_sat_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_l16_sat_hl(DisasContext *ctx, arg_A2_subh_l16_sat_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_l16_sat_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_ll(DisasContext *ctx, arg_A2_addh_h16_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_lh(DisasContext *ctx, arg_A2_addh_h16_lh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_lh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_hl(DisasContext *ctx, arg_A2_addh_h16_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_hh(DisasContext *ctx, arg_A2_addh_h16_hh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_hh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_sat_ll(DisasContext *ctx, arg_A2_addh_h16_sat_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_sat_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_sat_lh(DisasContext *ctx, arg_A2_addh_h16_sat_lh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_sat_lh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_sat_hl(DisasContext *ctx, arg_A2_addh_h16_sat_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_sat_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_addh_h16_sat_hh(DisasContext *ctx, arg_A2_addh_h16_sat_hh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addh_h16_sat_hh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_ll(DisasContext *ctx, arg_A2_subh_h16_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_lh(DisasContext *ctx, arg_A2_subh_h16_lh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_lh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_hl(DisasContext *ctx, arg_A2_subh_h16_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_hh(DisasContext *ctx, arg_A2_subh_h16_hh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_hh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_sat_ll(DisasContext *ctx, arg_A2_subh_h16_sat_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_sat_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_sat_lh(DisasContext *ctx, arg_A2_subh_h16_sat_lh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_sat_lh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_sat_hl(DisasContext *ctx, arg_A2_subh_h16_sat_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_sat_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_subh_h16_sat_hh(DisasContext *ctx, arg_A2_subh_h16_sat_hh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subh_h16_sat_hh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_aslh(DisasContext *ctx, arg_A2_aslh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_aslh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_asrh(DisasContext *ctx, arg_A2_asrh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_asrh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_addp(DisasContext *ctx, arg_A2_addp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_addpsat(DisasContext *ctx, arg_A2_addpsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addpsat;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_addspl(DisasContext *ctx, arg_A2_addspl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addspl;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_addsph(DisasContext *ctx, arg_A2_addsph *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_addsph;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_subp(DisasContext *ctx, arg_A2_subp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A4_addp_c(DisasContext *ctx, arg_A4_addp_c *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_addp_c;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    insn->regno[3] = args->Px;
    return true;
}
static bool trans_A4_subp_c(DisasContext *ctx, arg_A4_subp_c *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_subp_c;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    insn->regno[3] = args->Px;
    return true;
}
static bool trans_A2_negsat(DisasContext *ctx, arg_A2_negsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_negsat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_abs(DisasContext *ctx, arg_A2_abs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_abs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_abssat(DisasContext *ctx, arg_A2_abssat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_abssat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_vconj(DisasContext *ctx, arg_A2_vconj *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vconj;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_negp(DisasContext *ctx, arg_A2_negp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_negp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_absp(DisasContext *ctx, arg_A2_absp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_absp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_max(DisasContext *ctx, arg_A2_max *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_max;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_maxu(DisasContext *ctx, arg_A2_maxu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_maxu;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_min(DisasContext *ctx, arg_A2_min *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_min;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_minu(DisasContext *ctx, arg_A2_minu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_minu;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_maxp(DisasContext *ctx, arg_A2_maxp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_maxp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_maxup(DisasContext *ctx, arg_A2_maxup *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_maxup;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_minp(DisasContext *ctx, arg_A2_minp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_minp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_minup(DisasContext *ctx, arg_A2_minup *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_minup;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_nop(DisasContext *ctx, arg_A2_nop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_nop;
    return true;
}
static bool trans_A4_ext(DisasContext *ctx, arg_A4_ext *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_ext;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   6, 0);
    return true;
}
static bool trans_A2_tfr(DisasContext *ctx, arg_A2_tfr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_tfr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_tfrsi(DisasContext *ctx, arg_A2_tfrsi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_tfrsi;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_sxtb(DisasContext *ctx, arg_A2_sxtb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_sxtb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_zxth(DisasContext *ctx, arg_A2_zxth *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_zxth;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_sxth(DisasContext *ctx, arg_A2_sxth *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_sxth;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_combinew(DisasContext *ctx, arg_A2_combinew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_combinew;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_combineri(DisasContext *ctx, arg_A4_combineri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_combineri;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A4_combineir(DisasContext *ctx, arg_A4_combineir *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_combineir;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_combineii(DisasContext *ctx, arg_A2_combineii *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_combineii;
    insn->regno[0] = args->Rdd;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_A4_combineii(DisasContext *ctx, arg_A4_combineii *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_combineii;
    insn->regno[0] = args->Rdd;
    insn->which_extended = 1;
    insn->immed[0] = args->si;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_A2_combine_hh(DisasContext *ctx, arg_A2_combine_hh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_combine_hh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_combine_hl(DisasContext *ctx, arg_A2_combine_hl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_combine_hl;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_combine_lh(DisasContext *ctx, arg_A2_combine_lh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_combine_lh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_combine_ll(DisasContext *ctx, arg_A2_combine_ll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_combine_ll;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_tfril(DisasContext *ctx, arg_A2_tfril *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_tfril;
    insn->regno[0] = args->Rx;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A2_tfrih(DisasContext *ctx, arg_A2_tfrih *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_tfrih;
    insn->regno[0] = args->Rx;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A2_tfrcrr(DisasContext *ctx, arg_A2_tfrcrr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_tfrcrr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Cs;
    return true;
}
static bool trans_A2_tfrrcr(DisasContext *ctx, arg_A2_tfrrcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_tfrrcr;
    insn->regno[0] = args->Cd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A4_tfrcpp(DisasContext *ctx, arg_A4_tfrcpp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_tfrcpp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Css;
    return true;
}
static bool trans_A4_tfrpcp(DisasContext *ctx, arg_A4_tfrpcp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_tfrpcp;
    insn->regno[0] = args->Cdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_and(DisasContext *ctx, arg_A2_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_and;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_or(DisasContext *ctx, arg_A2_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_or;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_xor(DisasContext *ctx, arg_A2_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_xor;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M2_xor_xacc(DisasContext *ctx, arg_M2_xor_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_xor_xacc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_xor_xacc(DisasContext *ctx, arg_M4_xor_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_xor_xacc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A4_andn(DisasContext *ctx, arg_A4_andn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_andn;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_orn(DisasContext *ctx, arg_A4_orn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_orn;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A4_andnp(DisasContext *ctx, arg_A4_andnp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_andnp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A4_ornp(DisasContext *ctx, arg_A4_ornp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_ornp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_S4_addaddi(DisasContext *ctx, arg_S4_addaddi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_addaddi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_subaddi(DisasContext *ctx, arg_S4_subaddi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_subaddi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Ru;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_M4_and_and(DisasContext *ctx, arg_M4_and_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_and_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_and_andn(DisasContext *ctx, arg_M4_and_andn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_and_andn;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_and_or(DisasContext *ctx, arg_M4_and_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_and_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_and_xor(DisasContext *ctx, arg_M4_and_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_and_xor;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_or_and(DisasContext *ctx, arg_M4_or_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_or_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_or_andn(DisasContext *ctx, arg_M4_or_andn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_or_andn;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_or_or(DisasContext *ctx, arg_M4_or_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_or_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_or_xor(DisasContext *ctx, arg_M4_or_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_or_xor;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_or_andix(DisasContext *ctx, arg_S4_or_andix *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_or_andix;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Ru;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_or_andi(DisasContext *ctx, arg_S4_or_andi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_or_andi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_or_ori(DisasContext *ctx, arg_S4_or_ori *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_or_ori;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_M4_xor_and(DisasContext *ctx, arg_M4_xor_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_xor_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_xor_or(DisasContext *ctx, arg_M4_xor_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_xor_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_M4_xor_andn(DisasContext *ctx, arg_M4_xor_andn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M4_xor_andn;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_subri(DisasContext *ctx, arg_A2_subri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_subri;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_andir(DisasContext *ctx, arg_A2_andir *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_andir;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_orir(DisasContext *ctx, arg_A2_orir *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_orir;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_A2_andp(DisasContext *ctx, arg_A2_andp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_andp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_orp(DisasContext *ctx, arg_A2_orp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_orp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_xorp(DisasContext *ctx, arg_A2_xorp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_xorp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_notp(DisasContext *ctx, arg_A2_notp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_notp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_sxtw(DisasContext *ctx, arg_A2_sxtw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_sxtw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_sat(DisasContext *ctx, arg_A2_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_roundsat(DisasContext *ctx, arg_A2_roundsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_roundsat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_sath(DisasContext *ctx, arg_A2_sath *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_sath;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_satuh(DisasContext *ctx, arg_A2_satuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_satuh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_satub(DisasContext *ctx, arg_A2_satub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_satub;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_satb(DisasContext *ctx, arg_A2_satb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_satb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_A2_vaddub(DisasContext *ctx, arg_A2_vaddub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vaddub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vaddubs(DisasContext *ctx, arg_A2_vaddubs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vaddubs;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vaddh(DisasContext *ctx, arg_A2_vaddh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vaddh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vaddhs(DisasContext *ctx, arg_A2_vaddhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vaddhs;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vadduhs(DisasContext *ctx, arg_A2_vadduhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vadduhs;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A5_vaddhubs(DisasContext *ctx, arg_A5_vaddhubs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A5_vaddhubs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vaddw(DisasContext *ctx, arg_A2_vaddw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vaddw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vaddws(DisasContext *ctx, arg_A2_vaddws *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vaddws;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_vxaddsubw(DisasContext *ctx, arg_S4_vxaddsubw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vxaddsubw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_vxsubaddw(DisasContext *ctx, arg_S4_vxsubaddw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vxsubaddw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_vxaddsubh(DisasContext *ctx, arg_S4_vxaddsubh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vxaddsubh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_vxsubaddh(DisasContext *ctx, arg_S4_vxsubaddh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vxsubaddh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_vxaddsubhr(DisasContext *ctx, arg_S4_vxaddsubhr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vxaddsubhr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_vxsubaddhr(DisasContext *ctx, arg_S4_vxsubaddhr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_vxsubaddhr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_svavgh(DisasContext *ctx, arg_A2_svavgh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svavgh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_svavghs(DisasContext *ctx, arg_A2_svavghs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svavghs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_svnavgh(DisasContext *ctx, arg_A2_svnavgh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svnavgh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_svaddh(DisasContext *ctx, arg_A2_svaddh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svaddh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_svaddhs(DisasContext *ctx, arg_A2_svaddhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svaddhs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_svadduhs(DisasContext *ctx, arg_A2_svadduhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svadduhs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_svsubh(DisasContext *ctx, arg_A2_svsubh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svsubh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_svsubhs(DisasContext *ctx, arg_A2_svsubhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svsubhs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_svsubuhs(DisasContext *ctx, arg_A2_svsubuhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_svsubuhs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_A2_vraddub(DisasContext *ctx, arg_A2_vraddub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vraddub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vraddub_acc(DisasContext *ctx, arg_A2_vraddub_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vraddub_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vraddh(DisasContext *ctx, arg_M2_vraddh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vraddh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_M2_vradduh(DisasContext *ctx, arg_M2_vradduh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vradduh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vsubub(DisasContext *ctx, arg_A2_vsubub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vsubub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vsububs(DisasContext *ctx, arg_A2_vsububs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vsububs;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vsubh(DisasContext *ctx, arg_A2_vsubh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vsubh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vsubhs(DisasContext *ctx, arg_A2_vsubhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vsubhs;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vsubuhs(DisasContext *ctx, arg_A2_vsubuhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vsubuhs;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vsubw(DisasContext *ctx, arg_A2_vsubw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vsubw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vsubws(DisasContext *ctx, arg_A2_vsubws *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vsubws;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vabsh(DisasContext *ctx, arg_A2_vabsh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vabsh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_vabshsat(DisasContext *ctx, arg_A2_vabshsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vabshsat;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_vabsw(DisasContext *ctx, arg_A2_vabsw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vabsw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_A2_vabswsat(DisasContext *ctx, arg_A2_vabswsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vabswsat;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_M2_vabsdiffw(DisasContext *ctx, arg_M2_vabsdiffw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vabsdiffw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_M2_vabsdiffh(DisasContext *ctx, arg_M2_vabsdiffh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M2_vabsdiffh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_M6_vabsdiffb(DisasContext *ctx, arg_M6_vabsdiffb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M6_vabsdiffb;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_M6_vabsdiffub(DisasContext *ctx, arg_M6_vabsdiffub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = M6_vabsdiffub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vrsadub(DisasContext *ctx, arg_A2_vrsadub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vrsadub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vrsadub_acc(DisasContext *ctx, arg_A2_vrsadub_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vrsadub_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vavgub(DisasContext *ctx, arg_A2_vavgub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavgub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vavguh(DisasContext *ctx, arg_A2_vavguh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavguh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vavgh(DisasContext *ctx, arg_A2_vavgh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavgh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vnavgh(DisasContext *ctx, arg_A2_vnavgh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vnavgh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vavgw(DisasContext *ctx, arg_A2_vavgw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavgw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vnavgw(DisasContext *ctx, arg_A2_vnavgw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vnavgw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vavgwr(DisasContext *ctx, arg_A2_vavgwr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavgwr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vnavgwr(DisasContext *ctx, arg_A2_vnavgwr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vnavgwr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vavgwcr(DisasContext *ctx, arg_A2_vavgwcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavgwcr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vnavgwcr(DisasContext *ctx, arg_A2_vnavgwcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vnavgwcr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vavghcr(DisasContext *ctx, arg_A2_vavghcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavghcr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vnavghcr(DisasContext *ctx, arg_A2_vnavghcr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vnavghcr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vavguw(DisasContext *ctx, arg_A2_vavguw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavguw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vavguwr(DisasContext *ctx, arg_A2_vavguwr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavguwr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vavgubr(DisasContext *ctx, arg_A2_vavgubr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavgubr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vavguhr(DisasContext *ctx, arg_A2_vavguhr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavguhr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vavghr(DisasContext *ctx, arg_A2_vavghr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vavghr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_A2_vnavghr(DisasContext *ctx, arg_A2_vnavghr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vnavghr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A4_round_ri(DisasContext *ctx, arg_A4_round_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_round_ri;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_round_rr(DisasContext *ctx, arg_A4_round_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_round_rr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_round_ri_sat(DisasContext *ctx, arg_A4_round_ri_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_round_ri_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_round_rr_sat(DisasContext *ctx, arg_A4_round_rr_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_round_rr_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A4_cround_ri(DisasContext *ctx, arg_A4_cround_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cround_ri;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_cround_rr(DisasContext *ctx, arg_A4_cround_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_cround_rr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A7_croundd_ri(DisasContext *ctx, arg_A7_croundd_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A7_croundd_ri;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A7_croundd_rr(DisasContext *ctx, arg_A7_croundd_rr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A7_croundd_rr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A7_clip(DisasContext *ctx, arg_A7_clip *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A7_clip;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A7_vclip(DisasContext *ctx, arg_A7_vclip *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A7_vclip;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_vrminh(DisasContext *ctx, arg_A4_vrminh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrminh;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A4_vrmaxh(DisasContext *ctx, arg_A4_vrmaxh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrmaxh;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A4_vrminuh(DisasContext *ctx, arg_A4_vrminuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrminuh;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A4_vrmaxuh(DisasContext *ctx, arg_A4_vrmaxuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrmaxuh;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A4_vrminw(DisasContext *ctx, arg_A4_vrminw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrminw;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A4_vrmaxw(DisasContext *ctx, arg_A4_vrmaxw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrmaxw;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A4_vrminuw(DisasContext *ctx, arg_A4_vrminuw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrminuw;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A4_vrmaxuw(DisasContext *ctx, arg_A4_vrmaxuw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_vrmaxuw;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Ru;
    return true;
}
static bool trans_A2_vminb(DisasContext *ctx, arg_A2_vminb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vminb;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vmaxb(DisasContext *ctx, arg_A2_vmaxb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vmaxb;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vminub(DisasContext *ctx, arg_A2_vminub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vminub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vmaxub(DisasContext *ctx, arg_A2_vmaxub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vmaxub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vminh(DisasContext *ctx, arg_A2_vminh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vminh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vmaxh(DisasContext *ctx, arg_A2_vmaxh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vmaxh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vminuh(DisasContext *ctx, arg_A2_vminuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vminuh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vmaxuh(DisasContext *ctx, arg_A2_vmaxuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vmaxuh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vminw(DisasContext *ctx, arg_A2_vminw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vminw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vmaxw(DisasContext *ctx, arg_A2_vmaxw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vmaxw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vminuw(DisasContext *ctx, arg_A2_vminuw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vminuw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A2_vmaxuw(DisasContext *ctx, arg_A2_vmaxuw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_vmaxuw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_A5_ACS(DisasContext *ctx, arg_A5_ACS *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A5_ACS;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Pe;
    insn->regno[2] = args->Rss;
    insn->regno[3] = args->Rtt;
    return true;
}
static bool trans_A6_vminub_RdP(DisasContext *ctx, arg_A6_vminub_RdP *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A6_vminub_RdP;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Pe;
    insn->regno[2] = args->Rtt;
    insn->regno[3] = args->Rss;
    return true;
}
static bool trans_A4_modwrapu(DisasContext *ctx, arg_A4_modwrapu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_modwrapu;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfadd(DisasContext *ctx, arg_F2_sfadd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfadd;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfsub(DisasContext *ctx, arg_F2_sfsub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfsub;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfmpy(DisasContext *ctx, arg_F2_sfmpy *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfmpy;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sffma(DisasContext *ctx, arg_F2_sffma *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffma;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sffma_sc(DisasContext *ctx, arg_F2_sffma_sc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffma_sc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_F2_sffms(DisasContext *ctx, arg_F2_sffms *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffms;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sffma_lib(DisasContext *ctx, arg_F2_sffma_lib *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffma_lib;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sffms_lib(DisasContext *ctx, arg_F2_sffms_lib *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffms_lib;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfcmpeq(DisasContext *ctx, arg_F2_sfcmpeq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfcmpeq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfcmpgt(DisasContext *ctx, arg_F2_sfcmpgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfcmpgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfcmpge(DisasContext *ctx, arg_F2_sfcmpge *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfcmpge;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfcmpuo(DisasContext *ctx, arg_F2_sfcmpuo *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfcmpuo;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfmax(DisasContext *ctx, arg_F2_sfmax *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfmax;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfmin(DisasContext *ctx, arg_F2_sfmin *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfmin;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfclass(DisasContext *ctx, arg_F2_sfclass *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfclass;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_F2_sfimm_p(DisasContext *ctx, arg_F2_sfimm_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfimm_p;
    insn->regno[0] = args->Rd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_F2_sfimm_n(DisasContext *ctx, arg_F2_sfimm_n *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfimm_n;
    insn->regno[0] = args->Rd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_F2_sfrecipa(DisasContext *ctx, arg_F2_sfrecipa *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfrecipa;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Pe;
    insn->regno[2] = args->Rs;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_F2_sffixupn(DisasContext *ctx, arg_F2_sffixupn *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffixupn;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sffixupd(DisasContext *ctx, arg_F2_sffixupd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffixupd;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_F2_sfinvsqrta(DisasContext *ctx, arg_F2_sfinvsqrta *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sfinvsqrta;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Pe;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_F2_sffixupr(DisasContext *ctx, arg_F2_sffixupr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_sffixupr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_dfadd(DisasContext *ctx, arg_F2_dfadd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfadd;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfsub(DisasContext *ctx, arg_F2_dfsub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfsub;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfmax(DisasContext *ctx, arg_F2_dfmax *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfmax;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfmin(DisasContext *ctx, arg_F2_dfmin *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfmin;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfmpyfix(DisasContext *ctx, arg_F2_dfmpyfix *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfmpyfix;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfmpyll(DisasContext *ctx, arg_F2_dfmpyll *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfmpyll;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfmpylh(DisasContext *ctx, arg_F2_dfmpylh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfmpylh;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfmpyhh(DisasContext *ctx, arg_F2_dfmpyhh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfmpyhh;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfcmpeq(DisasContext *ctx, arg_F2_dfcmpeq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfcmpeq;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfcmpgt(DisasContext *ctx, arg_F2_dfcmpgt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfcmpgt;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfcmpge(DisasContext *ctx, arg_F2_dfcmpge *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfcmpge;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfcmpuo(DisasContext *ctx, arg_F2_dfcmpuo *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfcmpuo;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_F2_dfclass(DisasContext *ctx, arg_F2_dfclass *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfclass;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_F2_dfimm_p(DisasContext *ctx, arg_F2_dfimm_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfimm_p;
    insn->regno[0] = args->Rdd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_F2_dfimm_n(DisasContext *ctx, arg_F2_dfimm_n *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_dfimm_n;
    insn->regno[0] = args->Rdd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_F2_conv_sf2df(DisasContext *ctx, arg_F2_conv_sf2df *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2df;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_df2sf(DisasContext *ctx, arg_F2_conv_df2sf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2sf;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_uw2sf(DisasContext *ctx, arg_F2_conv_uw2sf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_uw2sf;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_uw2df(DisasContext *ctx, arg_F2_conv_uw2df *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_uw2df;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_w2sf(DisasContext *ctx, arg_F2_conv_w2sf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_w2sf;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_w2df(DisasContext *ctx, arg_F2_conv_w2df *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_w2df;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_ud2sf(DisasContext *ctx, arg_F2_conv_ud2sf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_ud2sf;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_ud2df(DisasContext *ctx, arg_F2_conv_ud2df *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_ud2df;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_d2sf(DisasContext *ctx, arg_F2_conv_d2sf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_d2sf;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_d2df(DisasContext *ctx, arg_F2_conv_d2df *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_d2df;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_sf2uw(DisasContext *ctx, arg_F2_conv_sf2uw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2uw;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_sf2w(DisasContext *ctx, arg_F2_conv_sf2w *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2w;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_sf2ud(DisasContext *ctx, arg_F2_conv_sf2ud *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2ud;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_sf2d(DisasContext *ctx, arg_F2_conv_sf2d *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2d;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_df2uw(DisasContext *ctx, arg_F2_conv_df2uw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2uw;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_df2w(DisasContext *ctx, arg_F2_conv_df2w *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2w;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_df2ud(DisasContext *ctx, arg_F2_conv_df2ud *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2ud;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_df2d(DisasContext *ctx, arg_F2_conv_df2d *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2d;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_sf2uw_chop(DisasContext *ctx, arg_F2_conv_sf2uw_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2uw_chop;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_sf2w_chop(DisasContext *ctx, arg_F2_conv_sf2w_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2w_chop;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_sf2ud_chop(DisasContext *ctx, arg_F2_conv_sf2ud_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2ud_chop;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_sf2d_chop(DisasContext *ctx, arg_F2_conv_sf2d_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_sf2d_chop;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_F2_conv_df2uw_chop(DisasContext *ctx, arg_F2_conv_df2uw_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2uw_chop;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_df2w_chop(DisasContext *ctx, arg_F2_conv_df2w_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2w_chop;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_df2ud_chop(DisasContext *ctx, arg_F2_conv_df2ud_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2ud_chop;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_F2_conv_df2d_chop(DisasContext *ctx, arg_F2_conv_df2d_chop *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = F2_conv_df2d_chop;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_asr_r_r(DisasContext *ctx, arg_S2_asr_r_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_r(DisasContext *ctx, arg_S2_asl_r_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_r(DisasContext *ctx, arg_S2_lsr_r_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_r(DisasContext *ctx, arg_S2_lsl_r_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_p(DisasContext *ctx, arg_S2_asr_r_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_p(DisasContext *ctx, arg_S2_asl_r_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_p(DisasContext *ctx, arg_S2_lsr_r_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_p(DisasContext *ctx, arg_S2_lsl_r_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_r_acc(DisasContext *ctx, arg_S2_asr_r_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_r_acc(DisasContext *ctx, arg_S2_asl_r_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_r_acc(DisasContext *ctx, arg_S2_lsr_r_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_r_acc(DisasContext *ctx, arg_S2_lsl_r_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_p_acc(DisasContext *ctx, arg_S2_asr_r_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_p_acc(DisasContext *ctx, arg_S2_asl_r_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_p_acc(DisasContext *ctx, arg_S2_lsr_r_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_p_acc(DisasContext *ctx, arg_S2_lsl_r_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_r_nac(DisasContext *ctx, arg_S2_asr_r_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_r_nac(DisasContext *ctx, arg_S2_asl_r_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_r_nac(DisasContext *ctx, arg_S2_lsr_r_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_r_nac(DisasContext *ctx, arg_S2_lsl_r_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_p_nac(DisasContext *ctx, arg_S2_asr_r_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_p_nac(DisasContext *ctx, arg_S2_asl_r_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_p_nac(DisasContext *ctx, arg_S2_lsr_r_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_p_nac(DisasContext *ctx, arg_S2_lsl_r_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_r_and(DisasContext *ctx, arg_S2_asr_r_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_r_and(DisasContext *ctx, arg_S2_asl_r_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_r_and(DisasContext *ctx, arg_S2_lsr_r_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_r_and(DisasContext *ctx, arg_S2_lsl_r_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_r_or(DisasContext *ctx, arg_S2_asr_r_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_r_or(DisasContext *ctx, arg_S2_asl_r_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_r_or(DisasContext *ctx, arg_S2_lsr_r_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_r_or(DisasContext *ctx, arg_S2_lsl_r_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_p_and(DisasContext *ctx, arg_S2_asr_r_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_p_and(DisasContext *ctx, arg_S2_asl_r_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_p_and(DisasContext *ctx, arg_S2_lsr_r_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_p_and(DisasContext *ctx, arg_S2_lsl_r_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_p_or(DisasContext *ctx, arg_S2_asr_r_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_p_or(DisasContext *ctx, arg_S2_asl_r_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_p_or(DisasContext *ctx, arg_S2_lsr_r_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_p_or(DisasContext *ctx, arg_S2_lsl_r_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_p_xor(DisasContext *ctx, arg_S2_asr_r_p_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_p_xor;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_p_xor(DisasContext *ctx, arg_S2_asl_r_p_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_p_xor;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_p_xor(DisasContext *ctx, arg_S2_lsr_r_p_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_p_xor;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_p_xor(DisasContext *ctx, arg_S2_lsl_r_p_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_p_xor;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_r_r_sat(DisasContext *ctx, arg_S2_asr_r_r_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_r_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_r_sat(DisasContext *ctx, arg_S2_asl_r_r_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_r_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_i_r(DisasContext *ctx, arg_S2_asr_i_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_r(DisasContext *ctx, arg_S2_lsr_i_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_r(DisasContext *ctx, arg_S2_asl_i_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_r(DisasContext *ctx, arg_S6_rol_i_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_p(DisasContext *ctx, arg_S2_asr_i_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_p(DisasContext *ctx, arg_S2_lsr_i_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_p(DisasContext *ctx, arg_S2_asl_i_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_p(DisasContext *ctx, arg_S6_rol_i_p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_p;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_r_acc(DisasContext *ctx, arg_S2_asr_i_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_r_acc(DisasContext *ctx, arg_S2_lsr_i_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_r_acc(DisasContext *ctx, arg_S2_asl_i_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_r_acc(DisasContext *ctx, arg_S6_rol_i_r_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_r_acc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_p_acc(DisasContext *ctx, arg_S2_asr_i_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_p_acc(DisasContext *ctx, arg_S2_lsr_i_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_p_acc(DisasContext *ctx, arg_S2_asl_i_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_p_acc(DisasContext *ctx, arg_S6_rol_i_p_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_p_acc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_r_nac(DisasContext *ctx, arg_S2_asr_i_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_r_nac(DisasContext *ctx, arg_S2_lsr_i_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_r_nac(DisasContext *ctx, arg_S2_asl_i_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_r_nac(DisasContext *ctx, arg_S6_rol_i_r_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_r_nac;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_p_nac(DisasContext *ctx, arg_S2_asr_i_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_p_nac(DisasContext *ctx, arg_S2_lsr_i_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_p_nac(DisasContext *ctx, arg_S2_asl_i_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_p_nac(DisasContext *ctx, arg_S6_rol_i_p_nac *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_p_nac;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_r_xacc(DisasContext *ctx, arg_S2_lsr_i_r_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_r_xacc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_r_xacc(DisasContext *ctx, arg_S2_asl_i_r_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_r_xacc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_r_xacc(DisasContext *ctx, arg_S6_rol_i_r_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_r_xacc;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_p_xacc(DisasContext *ctx, arg_S2_lsr_i_p_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_p_xacc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_p_xacc(DisasContext *ctx, arg_S2_asl_i_p_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_p_xacc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_p_xacc(DisasContext *ctx, arg_S6_rol_i_p_xacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_p_xacc;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_r_and(DisasContext *ctx, arg_S2_asr_i_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_r_and(DisasContext *ctx, arg_S2_lsr_i_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_r_and(DisasContext *ctx, arg_S2_asl_i_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_r_and(DisasContext *ctx, arg_S6_rol_i_r_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_r_and;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_r_or(DisasContext *ctx, arg_S2_asr_i_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_r_or(DisasContext *ctx, arg_S2_lsr_i_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_r_or(DisasContext *ctx, arg_S2_asl_i_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_r_or(DisasContext *ctx, arg_S6_rol_i_r_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_r_or;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_p_and(DisasContext *ctx, arg_S2_asr_i_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_p_and(DisasContext *ctx, arg_S2_lsr_i_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_p_and(DisasContext *ctx, arg_S2_asl_i_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_p_and(DisasContext *ctx, arg_S6_rol_i_p_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_p_and;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_p_or(DisasContext *ctx, arg_S2_asr_i_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_p_or(DisasContext *ctx, arg_S2_lsr_i_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_p_or(DisasContext *ctx, arg_S2_asl_i_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S6_rol_i_p_or(DisasContext *ctx, arg_S6_rol_i_p_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_rol_i_p_or;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_r_sat(DisasContext *ctx, arg_S2_asl_i_r_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_r_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_r_rnd(DisasContext *ctx, arg_S2_asr_i_r_rnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_r_rnd;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_p_rnd(DisasContext *ctx, arg_S2_asr_i_p_rnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_p_rnd;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_lsli(DisasContext *ctx, arg_S4_lsli *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_lsli;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_addasl_rrri(DisasContext *ctx, arg_S2_addasl_rrri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_addasl_rrri;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_andi_asl_ri(DisasContext *ctx, arg_S4_andi_asl_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_andi_asl_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_ori_asl_ri(DisasContext *ctx, arg_S4_ori_asl_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_ori_asl_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_addi_asl_ri(DisasContext *ctx, arg_S4_addi_asl_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_addi_asl_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_subi_asl_ri(DisasContext *ctx, arg_S4_subi_asl_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_subi_asl_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_andi_lsr_ri(DisasContext *ctx, arg_S4_andi_lsr_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_andi_lsr_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_ori_lsr_ri(DisasContext *ctx, arg_S4_ori_lsr_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_ori_lsr_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_addi_lsr_ri(DisasContext *ctx, arg_S4_addi_lsr_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_addi_lsr_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_subi_lsr_ri(DisasContext *ctx, arg_S4_subi_lsr_ri *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_subi_lsr_ri;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_valignib(DisasContext *ctx, arg_S2_valignib *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_valignib;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_valignrb(DisasContext *ctx, arg_S2_valignrb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_valignrb;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_S2_vspliceib(DisasContext *ctx, arg_S2_vspliceib *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vspliceib;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_vsplicerb(DisasContext *ctx, arg_S2_vsplicerb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsplicerb;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    insn->regno[3] = args->Pu;
    return true;
}
static bool trans_S2_vsplatrh(DisasContext *ctx, arg_S2_vsplatrh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsplatrh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_vsplatrb(DisasContext *ctx, arg_S2_vsplatrb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsplatrb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S6_vsplatrbp(DisasContext *ctx, arg_S6_vsplatrbp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_vsplatrbp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_insert(DisasContext *ctx, arg_S2_insert *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_insert;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_tableidxb(DisasContext *ctx, arg_S2_tableidxb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_tableidxb;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S2_tableidxh(DisasContext *ctx, arg_S2_tableidxh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_tableidxh;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S2_tableidxw(DisasContext *ctx, arg_S2_tableidxw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_tableidxw;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_S2_tableidxd(DisasContext *ctx, arg_S2_tableidxd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_tableidxd;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->SI;
    return true;
}
static bool trans_A4_bitspliti(DisasContext *ctx, arg_A4_bitspliti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_bitspliti;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_A4_bitsplit(DisasContext *ctx, arg_A4_bitsplit *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A4_bitsplit;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_extract(DisasContext *ctx, arg_S4_extract *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_extract;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_extractu(DisasContext *ctx, arg_S2_extractu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_extractu;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_insertp(DisasContext *ctx, arg_S2_insertp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_insertp;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S4_extractp(DisasContext *ctx, arg_S4_extractp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_extractp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_extractup(DisasContext *ctx, arg_S2_extractup *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_extractup;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_mask(DisasContext *ctx, arg_S2_mask *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_mask;
    insn->regno[0] = args->Rd;
    insn->immed[0] = args->ui;
    insn->immed[1] = args->UI;
    return true;
}
static bool trans_S2_insert_rp(DisasContext *ctx, arg_S2_insert_rp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_insert_rp;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_extract_rp(DisasContext *ctx, arg_S4_extract_rp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_extract_rp;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_extractu_rp(DisasContext *ctx, arg_S2_extractu_rp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_extractu_rp;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_insertp_rp(DisasContext *ctx, arg_S2_insertp_rp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_insertp_rp;
    insn->regno[0] = args->Rxx;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S4_extractp_rp(DisasContext *ctx, arg_S4_extractp_rp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_extractp_rp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_extractup_rp(DisasContext *ctx, arg_S2_extractup_rp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_extractup_rp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_tstbit_i(DisasContext *ctx, arg_S2_tstbit_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_tstbit_i;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S4_ntstbit_i(DisasContext *ctx, arg_S4_ntstbit_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_ntstbit_i;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_setbit_i(DisasContext *ctx, arg_S2_setbit_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_setbit_i;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_togglebit_i(DisasContext *ctx, arg_S2_togglebit_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_togglebit_i;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_clrbit_i(DisasContext *ctx, arg_S2_clrbit_i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_clrbit_i;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_tstbit_r(DisasContext *ctx, arg_S2_tstbit_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_tstbit_r;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S4_ntstbit_r(DisasContext *ctx, arg_S4_ntstbit_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_ntstbit_r;
    insn->regno[0] = args->Pd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_setbit_r(DisasContext *ctx, arg_S2_setbit_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_setbit_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_togglebit_r(DisasContext *ctx, arg_S2_togglebit_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_togglebit_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_clrbit_r(DisasContext *ctx, arg_S2_clrbit_r *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_clrbit_r;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_i_vh(DisasContext *ctx, arg_S2_asr_i_vh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_vh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_lsr_i_vh(DisasContext *ctx, arg_S2_lsr_i_vh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_vh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_vh(DisasContext *ctx, arg_S2_asl_i_vh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_vh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_r_vh(DisasContext *ctx, arg_S2_asr_r_vh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_vh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S5_asrhub_rnd_sat(DisasContext *ctx, arg_S5_asrhub_rnd_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S5_asrhub_rnd_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S5_asrhub_sat(DisasContext *ctx, arg_S5_asrhub_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S5_asrhub_sat;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S5_vasrhrnd(DisasContext *ctx, arg_S5_vasrhrnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S5_vasrhrnd;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_r_vh(DisasContext *ctx, arg_S2_asl_r_vh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_vh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_vh(DisasContext *ctx, arg_S2_lsr_r_vh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_vh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_vh(DisasContext *ctx, arg_S2_lsl_r_vh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_vh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asr_i_vw(DisasContext *ctx, arg_S2_asr_i_vw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_vw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_i_svw_trun(DisasContext *ctx, arg_S2_asr_i_svw_trun *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_i_svw_trun;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_r_svw_trun(DisasContext *ctx, arg_S2_asr_r_svw_trun *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_svw_trun;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_i_vw(DisasContext *ctx, arg_S2_lsr_i_vw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_i_vw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asl_i_vw(DisasContext *ctx, arg_S2_asl_i_vw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_i_vw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_S2_asr_r_vw(DisasContext *ctx, arg_S2_asr_r_vw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asr_r_vw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_asl_r_vw(DisasContext *ctx, arg_S2_asl_r_vw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_asl_r_vw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsr_r_vw(DisasContext *ctx, arg_S2_lsr_r_vw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsr_r_vw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_lsl_r_vw(DisasContext *ctx, arg_S2_lsl_r_vw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lsl_r_vw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_vrndpackwh(DisasContext *ctx, arg_S2_vrndpackwh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vrndpackwh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vrndpackwhs(DisasContext *ctx, arg_S2_vrndpackwhs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vrndpackwhs;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vsxtbh(DisasContext *ctx, arg_S2_vsxtbh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsxtbh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_vzxtbh(DisasContext *ctx, arg_S2_vzxtbh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vzxtbh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_vsathub(DisasContext *ctx, arg_S2_vsathub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsathub;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_svsathub(DisasContext *ctx, arg_S2_svsathub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_svsathub;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_svsathb(DisasContext *ctx, arg_S2_svsathb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_svsathb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_vsathb(DisasContext *ctx, arg_S2_vsathb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsathb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vtrunohb(DisasContext *ctx, arg_S2_vtrunohb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vtrunohb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vtrunewh(DisasContext *ctx, arg_S2_vtrunewh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vtrunewh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_vtrunowh(DisasContext *ctx, arg_S2_vtrunowh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vtrunowh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_vtrunehb(DisasContext *ctx, arg_S2_vtrunehb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vtrunehb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S6_vtrunehb_ppp(DisasContext *ctx, arg_S6_vtrunehb_ppp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_vtrunehb_ppp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S6_vtrunohb_ppp(DisasContext *ctx, arg_S6_vtrunohb_ppp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S6_vtrunohb_ppp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_vsxthw(DisasContext *ctx, arg_S2_vsxthw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsxthw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_vzxthw(DisasContext *ctx, arg_S2_vzxthw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vzxthw;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_vsatwh(DisasContext *ctx, arg_S2_vsatwh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsatwh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vsatwuh(DisasContext *ctx, arg_S2_vsatwuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsatwuh;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_packhl(DisasContext *ctx, arg_S2_packhl *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_packhl;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_A2_swiz(DisasContext *ctx, arg_A2_swiz *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = A2_swiz;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_vsathub_nopack(DisasContext *ctx, arg_S2_vsathub_nopack *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsathub_nopack;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vsathb_nopack(DisasContext *ctx, arg_S2_vsathb_nopack *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsathb_nopack;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vsatwh_nopack(DisasContext *ctx, arg_S2_vsatwh_nopack *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsatwh_nopack;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_vsatwuh_nopack(DisasContext *ctx, arg_S2_vsatwuh_nopack *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_vsatwuh_nopack;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_shuffob(DisasContext *ctx, arg_S2_shuffob *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_shuffob;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_S2_shuffeb(DisasContext *ctx, arg_S2_shuffeb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_shuffeb;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_shuffoh(DisasContext *ctx, arg_S2_shuffoh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_shuffoh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rtt;
    insn->regno[2] = args->Rss;
    return true;
}
static bool trans_S2_shuffeh(DisasContext *ctx, arg_S2_shuffeh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_shuffeh;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S5_popcountp(DisasContext *ctx, arg_S5_popcountp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S5_popcountp;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S4_parity(DisasContext *ctx, arg_S4_parity *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_parity;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_S2_parityp(DisasContext *ctx, arg_S2_parityp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_parityp;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_lfsp(DisasContext *ctx, arg_S2_lfsp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_lfsp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_clbnorm(DisasContext *ctx, arg_S2_clbnorm *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_clbnorm;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S4_clbaddi(DisasContext *ctx, arg_S4_clbaddi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_clbaddi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S4_clbpnorm(DisasContext *ctx, arg_S4_clbpnorm *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_clbpnorm;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S4_clbpaddi(DisasContext *ctx, arg_S4_clbpaddi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S4_clbpaddi;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_S2_cabacdecbin(DisasContext *ctx, arg_S2_cabacdecbin *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_cabacdecbin;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_S2_clb(DisasContext *ctx, arg_S2_clb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_clb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_cl0(DisasContext *ctx, arg_S2_cl0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_cl0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_cl1(DisasContext *ctx, arg_S2_cl1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_cl1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_clbp(DisasContext *ctx, arg_S2_clbp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_clbp;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_cl0p(DisasContext *ctx, arg_S2_cl0p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_cl0p;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_cl1p(DisasContext *ctx, arg_S2_cl1p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_cl1p;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_brev(DisasContext *ctx, arg_S2_brev *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_brev;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_brevp(DisasContext *ctx, arg_S2_brevp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_brevp;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_ct0(DisasContext *ctx, arg_S2_ct0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_ct0;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_ct1(DisasContext *ctx, arg_S2_ct1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_ct1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_S2_ct0p(DisasContext *ctx, arg_S2_ct0p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_ct0p;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_ct1p(DisasContext *ctx, arg_S2_ct1p *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_ct1p;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_interleave(DisasContext *ctx, arg_S2_interleave *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_interleave;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_S2_deinterleave(DisasContext *ctx, arg_S2_deinterleave *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = S2_deinterleave;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rss;
    return true;
}
static bool trans_J2_trap0(DisasContext *ctx, arg_J2_trap0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_trap0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_J2_pause(DisasContext *ctx, arg_J2_pause *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = J2_pause;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_Y2_icinva(DisasContext *ctx, arg_Y2_icinva *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_icinva;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_Y2_isync(DisasContext *ctx, arg_Y2_isync *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_isync;
    return true;
}
static bool trans_Y2_barrier(DisasContext *ctx, arg_Y2_barrier *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_barrier;
    return true;
}
static bool trans_Y2_syncht(DisasContext *ctx, arg_Y2_syncht *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_syncht;
    return true;
}
static bool trans_Y2_dcfetchbo(DisasContext *ctx, arg_Y2_dcfetchbo *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_dcfetchbo;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_Y2_dczeroa(DisasContext *ctx, arg_Y2_dczeroa *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_dczeroa;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_Y2_dccleana(DisasContext *ctx, arg_Y2_dccleana *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_dccleana;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_Y2_dccleaninva(DisasContext *ctx, arg_Y2_dccleaninva *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_dccleaninva;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_Y2_dcinva(DisasContext *ctx, arg_Y2_dcinva *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y2_dcinva;
    insn->regno[0] = args->Rs;
    return true;
}
static bool trans_Y4_l2fetch(DisasContext *ctx, arg_Y4_l2fetch *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y4_l2fetch;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_Y5_l2fetch(DisasContext *ctx, arg_Y5_l2fetch *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = Y5_l2fetch;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rtt;
    return true;
}
static bool trans_SA1_addi(DisasContext *ctx, arg_SA1_addi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_addi;
    insn->regno[0] = args->Rx;
    insn->which_extended = 0;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_SA1_tfr(DisasContext *ctx, arg_SA1_tfr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_tfr;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_seti(DisasContext *ctx, arg_SA1_seti *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_seti;
    insn->regno[0] = args->Rd;
    insn->which_extended = 0;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SA1_setin1(DisasContext *ctx, arg_SA1_setin1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_setin1;
    insn->regno[0] = args->Rd;
    return true;
}
static bool trans_SA1_clrtnew(DisasContext *ctx, arg_SA1_clrtnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_clrtnew;
    insn->regno[0] = args->Rd;
    return true;
}
static bool trans_SA1_clrfnew(DisasContext *ctx, arg_SA1_clrfnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_clrfnew;
    insn->regno[0] = args->Rd;
    return true;
}
static bool trans_SA1_clrt(DisasContext *ctx, arg_SA1_clrt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_clrt;
    insn->regno[0] = args->Rd;
    return true;
}
static bool trans_SA1_clrf(DisasContext *ctx, arg_SA1_clrf *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_clrf;
    insn->regno[0] = args->Rd;
    return true;
}
static bool trans_SA1_addsp(DisasContext *ctx, arg_SA1_addsp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_addsp;
    insn->regno[0] = args->Rd;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_SA1_inc(DisasContext *ctx, arg_SA1_inc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_inc;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_dec(DisasContext *ctx, arg_SA1_dec *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_dec;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_addrx(DisasContext *ctx, arg_SA1_addrx *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_addrx;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_zxtb(DisasContext *ctx, arg_SA1_zxtb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_zxtb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_and1(DisasContext *ctx, arg_SA1_and1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_and1;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_sxtb(DisasContext *ctx, arg_SA1_sxtb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_sxtb;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_zxth(DisasContext *ctx, arg_SA1_zxth *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_zxth;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_sxth(DisasContext *ctx, arg_SA1_sxth *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_sxth;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_combinezr(DisasContext *ctx, arg_SA1_combinezr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_combinezr;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_combinerz(DisasContext *ctx, arg_SA1_combinerz *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_combinerz;
    insn->regno[0] = args->Rdd;
    insn->regno[1] = args->Rs;
    return true;
}
static bool trans_SA1_combine0i(DisasContext *ctx, arg_SA1_combine0i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_combine0i;
    insn->regno[0] = args->Rdd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SA1_combine1i(DisasContext *ctx, arg_SA1_combine1i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_combine1i;
    insn->regno[0] = args->Rdd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SA1_combine2i(DisasContext *ctx, arg_SA1_combine2i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_combine2i;
    insn->regno[0] = args->Rdd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SA1_combine3i(DisasContext *ctx, arg_SA1_combine3i *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_combine3i;
    insn->regno[0] = args->Rdd;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SA1_cmpeqi(DisasContext *ctx, arg_SA1_cmpeqi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SA1_cmpeqi;
    insn->regno[0] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SL1_loadri_io(DisasContext *ctx, arg_SL1_loadri_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL1_loadri_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_SL1_loadrub_io(DisasContext *ctx, arg_SL1_loadrub_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL1_loadrub_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SL2_loadrh_io(DisasContext *ctx, arg_SL2_loadrh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_loadrh_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_SL2_loadruh_io(DisasContext *ctx, arg_SL2_loadruh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_loadruh_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_SL2_loadrb_io(DisasContext *ctx, arg_SL2_loadrb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_loadrb_io;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SL2_loadri_sp(DisasContext *ctx, arg_SL2_loadri_sp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_loadri_sp;
    insn->regno[0] = args->Rd;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_SL2_loadrd_sp(DisasContext *ctx, arg_SL2_loadrd_sp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_loadrd_sp;
    insn->regno[0] = args->Rdd;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_SL2_deallocframe(DisasContext *ctx, arg_SL2_deallocframe *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_deallocframe;
    return true;
}
static bool trans_SL2_return(DisasContext *ctx, arg_SL2_return *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_return;
    return true;
}
static bool trans_SL2_return_t(DisasContext *ctx, arg_SL2_return_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_return_t;
    return true;
}
static bool trans_SL2_return_f(DisasContext *ctx, arg_SL2_return_f *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_return_f;
    return true;
}
static bool trans_SL2_return_tnew(DisasContext *ctx, arg_SL2_return_tnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_return_tnew;
    return true;
}
static bool trans_SL2_return_fnew(DisasContext *ctx, arg_SL2_return_fnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_return_fnew;
    return true;
}
static bool trans_SL2_jumpr31(DisasContext *ctx, arg_SL2_jumpr31 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_jumpr31;
    return true;
}
static bool trans_SL2_jumpr31_t(DisasContext *ctx, arg_SL2_jumpr31_t *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_jumpr31_t;
    return true;
}
static bool trans_SL2_jumpr31_f(DisasContext *ctx, arg_SL2_jumpr31_f *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_jumpr31_f;
    return true;
}
static bool trans_SL2_jumpr31_tnew(DisasContext *ctx, arg_SL2_jumpr31_tnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_jumpr31_tnew;
    return true;
}
static bool trans_SL2_jumpr31_fnew(DisasContext *ctx, arg_SL2_jumpr31_fnew *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SL2_jumpr31_fnew;
    return true;
}
static bool trans_SS1_storew_io(DisasContext *ctx, arg_SS1_storew_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS1_storew_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_SS1_storeb_io(DisasContext *ctx, arg_SS1_storeb_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS1_storeb_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SS2_storeh_io(DisasContext *ctx, arg_SS2_storeh_io *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_storeh_io;
    insn->regno[0] = args->Rs;
    insn->regno[1] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   1, 0);
    return true;
}
static bool trans_SS2_stored_sp(DisasContext *ctx, arg_SS2_stored_sp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_stored_sp;
    insn->regno[0] = args->Rtt;
    insn->immed[0] =
        shift_left(ctx, args->si,
                   3, 0);
    return true;
}
static bool trans_SS2_storew_sp(DisasContext *ctx, arg_SS2_storew_sp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_storew_sp;
    insn->regno[0] = args->Rt;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_SS2_storewi0(DisasContext *ctx, arg_SS2_storewi0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_storewi0;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_SS2_storebi0(DisasContext *ctx, arg_SS2_storebi0 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_storebi0;
    insn->regno[0] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SS2_storewi1(DisasContext *ctx, arg_SS2_storewi1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_storewi1;
    insn->regno[0] = args->Rs;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   2, 0);
    return true;
}
static bool trans_SS2_storebi1(DisasContext *ctx, arg_SS2_storebi1 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_storebi1;
    insn->regno[0] = args->Rs;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_SS2_allocframe(DisasContext *ctx, arg_SS2_allocframe *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = SS2_allocframe;
    insn->immed[0] =
        shift_left(ctx, args->ui,
                   3, 0);
    return true;
}
static bool trans_V6_vL32b_pi(DisasContext *ctx, arg_V6_vL32b_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_pi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_ai(DisasContext *ctx, arg_V6_vL32b_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_ai;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_ppu(DisasContext *ctx, arg_V6_vL32b_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_ppu;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_cur_pi(DisasContext *ctx, arg_V6_vL32b_cur_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_pi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_cur_ai(DisasContext *ctx, arg_V6_vL32b_cur_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_ai;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_cur_ppu(DisasContext *ctx, arg_V6_vL32b_cur_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_ppu;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_tmp_pi(DisasContext *ctx, arg_V6_vL32b_tmp_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_pi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_tmp_ai(DisasContext *ctx, arg_V6_vL32b_tmp_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_ai;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_tmp_ppu(DisasContext *ctx, arg_V6_vL32b_tmp_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_ppu;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_pred_pi(DisasContext *ctx, arg_V6_vL32b_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_pred_ai(DisasContext *ctx, arg_V6_vL32b_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_pred_ppu(DisasContext *ctx, arg_V6_vL32b_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_npred_pi(DisasContext *ctx, arg_V6_vL32b_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_npred_ai(DisasContext *ctx, arg_V6_vL32b_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_npred_ppu(DisasContext *ctx, arg_V6_vL32b_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_cur_pred_pi(DisasContext *ctx, arg_V6_vL32b_cur_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_cur_pred_ai(DisasContext *ctx, arg_V6_vL32b_cur_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_cur_pred_ppu(DisasContext *ctx, arg_V6_vL32b_cur_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_cur_npred_pi(DisasContext *ctx, arg_V6_vL32b_cur_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_cur_npred_ai(DisasContext *ctx, arg_V6_vL32b_cur_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_cur_npred_ppu(DisasContext *ctx, arg_V6_vL32b_cur_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_cur_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_tmp_pred_pi(DisasContext *ctx, arg_V6_vL32b_tmp_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_tmp_pred_ai(DisasContext *ctx, arg_V6_vL32b_tmp_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_tmp_pred_ppu(DisasContext *ctx, arg_V6_vL32b_tmp_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_tmp_npred_pi(DisasContext *ctx, arg_V6_vL32b_tmp_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_tmp_npred_ai(DisasContext *ctx, arg_V6_vL32b_tmp_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_tmp_npred_ppu(DisasContext *ctx, arg_V6_vL32b_tmp_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_tmp_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vS32b_pi(DisasContext *ctx, arg_V6_vS32b_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_ai(DisasContext *ctx, arg_V6_vS32b_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_ai;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_ppu(DisasContext *ctx, arg_V6_vS32b_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_ppu;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_pred_pi(DisasContext *ctx, arg_V6_vS32b_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_pred_ai(DisasContext *ctx, arg_V6_vS32b_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_pred_ppu(DisasContext *ctx, arg_V6_vS32b_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_npred_pi(DisasContext *ctx, arg_V6_vS32b_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_npred_ai(DisasContext *ctx, arg_V6_vS32b_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_npred_ppu(DisasContext *ctx, arg_V6_vS32b_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_qpred_pi(DisasContext *ctx, arg_V6_vS32b_qpred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_qpred_pi;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_qpred_ai(DisasContext *ctx, arg_V6_vS32b_qpred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_qpred_ai;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_qpred_ppu(DisasContext *ctx, arg_V6_vS32b_qpred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_qpred_ppu;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_nqpred_pi(DisasContext *ctx, arg_V6_vS32b_nqpred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nqpred_pi;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nqpred_ai(DisasContext *ctx, arg_V6_vS32b_nqpred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nqpred_ai;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nqpred_ppu(DisasContext *ctx, arg_V6_vS32b_nqpred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nqpred_ppu;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vL32Ub_pi(DisasContext *ctx, arg_V6_vL32Ub_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32Ub_pi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32Ub_ai(DisasContext *ctx, arg_V6_vL32Ub_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32Ub_ai;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32Ub_ppu(DisasContext *ctx, arg_V6_vL32Ub_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32Ub_ppu;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_V6_vS32Ub_pi(DisasContext *ctx, arg_V6_vS32Ub_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32Ub_ai(DisasContext *ctx, arg_V6_vS32Ub_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_ai;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32Ub_ppu(DisasContext *ctx, arg_V6_vS32Ub_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_ppu;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vs;
    return true;
}
static bool trans_V6_vS32Ub_pred_pi(DisasContext *ctx, arg_V6_vS32Ub_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32Ub_pred_ai(DisasContext *ctx, arg_V6_vS32Ub_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32Ub_pred_ppu(DisasContext *ctx, arg_V6_vS32Ub_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32Ub_npred_pi(DisasContext *ctx, arg_V6_vS32Ub_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32Ub_npred_ai(DisasContext *ctx, arg_V6_vS32Ub_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32Ub_npred_ppu(DisasContext *ctx, arg_V6_vS32Ub_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32Ub_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_new_pi(DisasContext *ctx, arg_V6_vS32b_new_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_new_ai(DisasContext *ctx, arg_V6_vS32b_new_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_ai;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_new_ppu(DisasContext *ctx, arg_V6_vS32b_new_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_ppu;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Os;
    return true;
}
static bool trans_V6_vS32b_srls_pi(DisasContext *ctx, arg_V6_vS32b_srls_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_srls_pi;
    insn->regno[0] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_srls_ai(DisasContext *ctx, arg_V6_vS32b_srls_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_srls_ai;
    insn->regno[0] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_srls_ppu(DisasContext *ctx, arg_V6_vS32b_srls_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_srls_ppu;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    return true;
}
static bool trans_V6_vS32b_new_pred_pi(DisasContext *ctx, arg_V6_vS32b_new_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_new_pred_ai(DisasContext *ctx, arg_V6_vS32b_new_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_new_pred_ppu(DisasContext *ctx, arg_V6_vS32b_new_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Os;
    return true;
}
static bool trans_V6_vS32b_new_npred_pi(DisasContext *ctx, arg_V6_vS32b_new_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_new_npred_ai(DisasContext *ctx, arg_V6_vS32b_new_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_new_npred_ppu(DisasContext *ctx, arg_V6_vS32b_new_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_new_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Os;
    return true;
}
static bool trans_V6_vS32b_nt_pi(DisasContext *ctx, arg_V6_vS32b_nt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_ai(DisasContext *ctx, arg_V6_vS32b_nt_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_ai;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_ppu(DisasContext *ctx, arg_V6_vS32b_nt_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_ppu;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_nt_pred_pi(DisasContext *ctx, arg_V6_vS32b_nt_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_pred_ai(DisasContext *ctx, arg_V6_vS32b_nt_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_pred_ppu(DisasContext *ctx, arg_V6_vS32b_nt_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_nt_npred_pi(DisasContext *ctx, arg_V6_vS32b_nt_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_npred_ai(DisasContext *ctx, arg_V6_vS32b_nt_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_npred_ppu(DisasContext *ctx, arg_V6_vS32b_nt_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_nt_new_pi(DisasContext *ctx, arg_V6_vS32b_nt_new_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_pi;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_new_ai(DisasContext *ctx, arg_V6_vS32b_nt_new_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_ai;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_new_ppu(DisasContext *ctx, arg_V6_vS32b_nt_new_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_ppu;
    insn->regno[0] = args->Rx;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Os;
    return true;
}
static bool trans_V6_vS32b_nt_new_pred_pi(DisasContext *ctx, arg_V6_vS32b_nt_new_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_new_pred_ai(DisasContext *ctx, arg_V6_vS32b_nt_new_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_new_pred_ppu(DisasContext *ctx, arg_V6_vS32b_nt_new_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Os;
    return true;
}
static bool trans_V6_vS32b_nt_new_npred_pi(DisasContext *ctx, arg_V6_vS32b_nt_new_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_new_npred_ai(DisasContext *ctx, arg_V6_vS32b_nt_new_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Os;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_new_npred_ppu(DisasContext *ctx, arg_V6_vS32b_nt_new_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_new_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Os;
    return true;
}
static bool trans_V6_vS32b_nt_qpred_pi(DisasContext *ctx, arg_V6_vS32b_nt_qpred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_qpred_pi;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_qpred_ai(DisasContext *ctx, arg_V6_vS32b_nt_qpred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_qpred_ai;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_qpred_ppu(DisasContext *ctx, arg_V6_vS32b_nt_qpred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_qpred_ppu;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vS32b_nt_nqpred_pi(DisasContext *ctx, arg_V6_vS32b_nt_nqpred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_nqpred_pi;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_nqpred_ai(DisasContext *ctx, arg_V6_vS32b_nt_nqpred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_nqpred_ai;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Vs;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vS32b_nt_nqpred_ppu(DisasContext *ctx, arg_V6_vS32b_nt_nqpred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vS32b_nt_nqpred_ppu;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vs;
    return true;
}
static bool trans_V6_vL32b_nt_pi(DisasContext *ctx, arg_V6_vL32b_nt_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_pi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_ai(DisasContext *ctx, arg_V6_vL32b_nt_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_ai;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_ppu(DisasContext *ctx, arg_V6_vL32b_nt_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_ppu;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_cur_pi(DisasContext *ctx, arg_V6_vL32b_nt_cur_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_pi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_cur_ai(DisasContext *ctx, arg_V6_vL32b_nt_cur_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_ai;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_cur_ppu(DisasContext *ctx, arg_V6_vL32b_nt_cur_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_ppu;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_pi(DisasContext *ctx, arg_V6_vL32b_nt_tmp_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_pi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_ai(DisasContext *ctx, arg_V6_vL32b_nt_tmp_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_ai;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_ppu(DisasContext *ctx, arg_V6_vL32b_nt_tmp_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_ppu;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rx;
    insn->regno[2] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_pred_pi(DisasContext *ctx, arg_V6_vL32b_nt_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_pred_ai(DisasContext *ctx, arg_V6_vL32b_nt_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_pred_ppu(DisasContext *ctx, arg_V6_vL32b_nt_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_npred_pi(DisasContext *ctx, arg_V6_vL32b_nt_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_npred_ai(DisasContext *ctx, arg_V6_vL32b_nt_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_npred_ppu(DisasContext *ctx, arg_V6_vL32b_nt_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_cur_pred_pi(DisasContext *ctx, arg_V6_vL32b_nt_cur_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_cur_pred_ai(DisasContext *ctx, arg_V6_vL32b_nt_cur_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_cur_pred_ppu(DisasContext *ctx, arg_V6_vL32b_nt_cur_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_cur_npred_pi(DisasContext *ctx, arg_V6_vL32b_nt_cur_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_cur_npred_ai(DisasContext *ctx, arg_V6_vL32b_nt_cur_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_cur_npred_ppu(DisasContext *ctx, arg_V6_vL32b_nt_cur_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_cur_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_pred_pi(DisasContext *ctx, arg_V6_vL32b_nt_tmp_pred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_pred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_pred_ai(DisasContext *ctx, arg_V6_vL32b_nt_tmp_pred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_pred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_pred_ppu(DisasContext *ctx, arg_V6_vL32b_nt_tmp_pred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_pred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_npred_pi(DisasContext *ctx, arg_V6_vL32b_nt_tmp_npred_pi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_npred_pi;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_npred_ai(DisasContext *ctx, arg_V6_vL32b_nt_tmp_npred_ai *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_npred_ai;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->si;
    return true;
}
static bool trans_V6_vL32b_nt_tmp_npred_ppu(DisasContext *ctx, arg_V6_vL32b_nt_tmp_npred_ppu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vL32b_nt_tmp_npred_ppu;
    insn->regno[0] = args->Pv;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Rx;
    insn->regno[3] = args->Mu;
    return true;
}
static bool trans_V6_valignb(DisasContext *ctx, arg_V6_valignb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_valignb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vlalignb(DisasContext *ctx, arg_V6_vlalignb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlalignb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_valignbi(DisasContext *ctx, arg_V6_valignbi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_valignbi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vlalignbi(DisasContext *ctx, arg_V6_vlalignbi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlalignbi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vror(DisasContext *ctx, arg_V6_vror *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vror;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vunpackub(DisasContext *ctx, arg_V6_vunpackub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vunpackub;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vunpackb(DisasContext *ctx, arg_V6_vunpackb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vunpackb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vunpackuh(DisasContext *ctx, arg_V6_vunpackuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vunpackuh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vunpackh(DisasContext *ctx, arg_V6_vunpackh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vunpackh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vunpackob(DisasContext *ctx, arg_V6_vunpackob *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vunpackob;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vunpackoh(DisasContext *ctx, arg_V6_vunpackoh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vunpackoh;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vpackeb(DisasContext *ctx, arg_V6_vpackeb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackeb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpackeh(DisasContext *ctx, arg_V6_vpackeh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackeh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpackob(DisasContext *ctx, arg_V6_vpackob *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackob;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpackoh(DisasContext *ctx, arg_V6_vpackoh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackoh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpackhub_sat(DisasContext *ctx, arg_V6_vpackhub_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackhub_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpackhb_sat(DisasContext *ctx, arg_V6_vpackhb_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackhb_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpackwuh_sat(DisasContext *ctx, arg_V6_vpackwuh_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackwuh_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpackwh_sat(DisasContext *ctx, arg_V6_vpackwh_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpackwh_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vzb(DisasContext *ctx, arg_V6_vzb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vzb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vsb(DisasContext *ctx, arg_V6_vsb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vzh(DisasContext *ctx, arg_V6_vzh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vzh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vsh(DisasContext *ctx, arg_V6_vsh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vdmpybus(DisasContext *ctx, arg_V6_vdmpybus *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpybus;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpybus_acc(DisasContext *ctx, arg_V6_vdmpybus_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpybus_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpybus_dv(DisasContext *ctx, arg_V6_vdmpybus_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpybus_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpybus_dv_acc(DisasContext *ctx, arg_V6_vdmpybus_dv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpybus_dv_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhb(DisasContext *ctx, arg_V6_vdmpyhb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhb_acc(DisasContext *ctx, arg_V6_vdmpyhb_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhb_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhb_dv(DisasContext *ctx, arg_V6_vdmpyhb_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhb_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhb_dv_acc(DisasContext *ctx, arg_V6_vdmpyhb_dv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhb_dv_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhvsat(DisasContext *ctx, arg_V6_vdmpyhvsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhvsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vdmpyhvsat_acc(DisasContext *ctx, arg_V6_vdmpyhvsat_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhvsat_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vdmpyhsat(DisasContext *ctx, arg_V6_vdmpyhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhsat_acc(DisasContext *ctx, arg_V6_vdmpyhsat_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhsat_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhisat(DisasContext *ctx, arg_V6_vdmpyhisat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhisat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhisat_acc(DisasContext *ctx, arg_V6_vdmpyhisat_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhisat_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhsusat(DisasContext *ctx, arg_V6_vdmpyhsusat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhsusat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhsusat_acc(DisasContext *ctx, arg_V6_vdmpyhsusat_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhsusat_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhsuisat(DisasContext *ctx, arg_V6_vdmpyhsuisat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhsuisat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdmpyhsuisat_acc(DisasContext *ctx, arg_V6_vdmpyhsuisat_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdmpyhsuisat_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vtmpyb(DisasContext *ctx, arg_V6_vtmpyb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vtmpyb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vtmpyb_acc(DisasContext *ctx, arg_V6_vtmpyb_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vtmpyb_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vtmpybus(DisasContext *ctx, arg_V6_vtmpybus *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vtmpybus;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vtmpybus_acc(DisasContext *ctx, arg_V6_vtmpybus_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vtmpybus_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vtmpyhb(DisasContext *ctx, arg_V6_vtmpyhb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vtmpyhb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vtmpyhb_acc(DisasContext *ctx, arg_V6_vtmpyhb_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vtmpyhb_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vrmpyub(DisasContext *ctx, arg_V6_vrmpyub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpyub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vrmpyub_acc(DisasContext *ctx, arg_V6_vrmpyub_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpyub_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vrmpyubv(DisasContext *ctx, arg_V6_vrmpyubv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpyubv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrmpyubv_acc(DisasContext *ctx, arg_V6_vrmpyubv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpyubv_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrmpybv(DisasContext *ctx, arg_V6_vrmpybv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrmpybv_acc(DisasContext *ctx, arg_V6_vrmpybv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybv_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrmpyubi(DisasContext *ctx, arg_V6_vrmpyubi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpyubi;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vrmpyubi_acc(DisasContext *ctx, arg_V6_vrmpyubi_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpyubi_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vrmpybus(DisasContext *ctx, arg_V6_vrmpybus *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybus;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vrmpybus_acc(DisasContext *ctx, arg_V6_vrmpybus_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybus_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vrmpybusi(DisasContext *ctx, arg_V6_vrmpybusi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybusi;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vrmpybusi_acc(DisasContext *ctx, arg_V6_vrmpybusi_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybusi_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vrmpybusv(DisasContext *ctx, arg_V6_vrmpybusv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybusv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrmpybusv_acc(DisasContext *ctx, arg_V6_vrmpybusv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrmpybusv_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vdsaduh(DisasContext *ctx, arg_V6_vdsaduh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdsaduh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdsaduh_acc(DisasContext *ctx, arg_V6_vdsaduh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdsaduh_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vrsadubi(DisasContext *ctx, arg_V6_vrsadubi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrsadubi;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vrsadubi_acc(DisasContext *ctx, arg_V6_vrsadubi_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrsadubi_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vasrw(DisasContext *ctx, arg_V6_vasrw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vaslw(DisasContext *ctx, arg_V6_vaslw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaslw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vlsrw(DisasContext *ctx, arg_V6_vlsrw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlsrw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vasrwv(DisasContext *ctx, arg_V6_vasrwv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrwv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaslwv(DisasContext *ctx, arg_V6_vaslwv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaslwv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vlsrwv(DisasContext *ctx, arg_V6_vlsrwv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlsrwv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vasrh(DisasContext *ctx, arg_V6_vasrh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vaslh(DisasContext *ctx, arg_V6_vaslh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaslh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vlsrh(DisasContext *ctx, arg_V6_vlsrh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlsrh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vasrhv(DisasContext *ctx, arg_V6_vasrhv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrhv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaslhv(DisasContext *ctx, arg_V6_vaslhv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaslhv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vlsrhv(DisasContext *ctx, arg_V6_vlsrhv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlsrhv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vlsrb(DisasContext *ctx, arg_V6_vlsrb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlsrb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vrotr(DisasContext *ctx, arg_V6_vrotr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrotr;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vasr_into(DisasContext *ctx, arg_V6_vasr_into *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasr_into;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vasrwh(DisasContext *ctx, arg_V6_vasrwh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrwh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrwhsat(DisasContext *ctx, arg_V6_vasrwhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrwhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrwhrndsat(DisasContext *ctx, arg_V6_vasrwhrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrwhrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrwuhrndsat(DisasContext *ctx, arg_V6_vasrwuhrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrwuhrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrwuhsat(DisasContext *ctx, arg_V6_vasrwuhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrwuhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasruwuhrndsat(DisasContext *ctx, arg_V6_vasruwuhrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasruwuhrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasruwuhsat(DisasContext *ctx, arg_V6_vasruwuhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasruwuhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrhubsat(DisasContext *ctx, arg_V6_vasrhubsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrhubsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrhubrndsat(DisasContext *ctx, arg_V6_vasrhubrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrhubrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrhbsat(DisasContext *ctx, arg_V6_vasrhbsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrhbsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrhbrndsat(DisasContext *ctx, arg_V6_vasrhbrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrhbrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasrvwuhsat(DisasContext *ctx, arg_V6_vasrvwuhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrvwuhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vasrvwuhrndsat(DisasContext *ctx, arg_V6_vasrvwuhrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrvwuhrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vasrvuhubsat(DisasContext *ctx, arg_V6_vasrvuhubsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrvuhubsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vasrvuhubrndsat(DisasContext *ctx, arg_V6_vasrvuhubrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrvuhubrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vasruhubsat(DisasContext *ctx, arg_V6_vasruhubsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasruhubsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vasruhubrndsat(DisasContext *ctx, arg_V6_vasruhubrndsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasruhubrndsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vroundwh(DisasContext *ctx, arg_V6_vroundwh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vroundwh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vroundwuh(DisasContext *ctx, arg_V6_vroundwuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vroundwuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrounduwuh(DisasContext *ctx, arg_V6_vrounduwuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrounduwuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vroundhb(DisasContext *ctx, arg_V6_vroundhb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vroundhb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vroundhub(DisasContext *ctx, arg_V6_vroundhub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vroundhub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrounduhub(DisasContext *ctx, arg_V6_vrounduhub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrounduhub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaslw_acc(DisasContext *ctx, arg_V6_vaslw_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaslw_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vasrw_acc(DisasContext *ctx, arg_V6_vasrw_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrw_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vaslh_acc(DisasContext *ctx, arg_V6_vaslh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaslh_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vasrh_acc(DisasContext *ctx, arg_V6_vasrh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vasrh_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vaddb(DisasContext *ctx, arg_V6_vaddb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubb(DisasContext *ctx, arg_V6_vsubb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddb_dv(DisasContext *ctx, arg_V6_vaddb_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddb_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubb_dv(DisasContext *ctx, arg_V6_vsubb_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubb_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vaddh(DisasContext *ctx, arg_V6_vaddh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubh(DisasContext *ctx, arg_V6_vsubh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddh_dv(DisasContext *ctx, arg_V6_vaddh_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddh_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubh_dv(DisasContext *ctx, arg_V6_vsubh_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubh_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vaddw(DisasContext *ctx, arg_V6_vaddw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubw(DisasContext *ctx, arg_V6_vsubw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddw_dv(DisasContext *ctx, arg_V6_vaddw_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddw_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubw_dv(DisasContext *ctx, arg_V6_vsubw_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubw_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vaddubsat(DisasContext *ctx, arg_V6_vaddubsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddubsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddubsat_dv(DisasContext *ctx, arg_V6_vaddubsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddubsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsububsat(DisasContext *ctx, arg_V6_vsububsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsububsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsububsat_dv(DisasContext *ctx, arg_V6_vsububsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsububsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vadduhsat(DisasContext *ctx, arg_V6_vadduhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vadduhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vadduhsat_dv(DisasContext *ctx, arg_V6_vadduhsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vadduhsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubuhsat(DisasContext *ctx, arg_V6_vsubuhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubuhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubuhsat_dv(DisasContext *ctx, arg_V6_vsubuhsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubuhsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vadduwsat(DisasContext *ctx, arg_V6_vadduwsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vadduwsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vadduwsat_dv(DisasContext *ctx, arg_V6_vadduwsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vadduwsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubuwsat(DisasContext *ctx, arg_V6_vsubuwsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubuwsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubuwsat_dv(DisasContext *ctx, arg_V6_vsubuwsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubuwsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vaddbsat(DisasContext *ctx, arg_V6_vaddbsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddbsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddbsat_dv(DisasContext *ctx, arg_V6_vaddbsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddbsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubbsat(DisasContext *ctx, arg_V6_vsubbsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubbsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubbsat_dv(DisasContext *ctx, arg_V6_vsubbsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubbsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vaddhsat(DisasContext *ctx, arg_V6_vaddhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddhsat_dv(DisasContext *ctx, arg_V6_vaddhsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddhsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubhsat(DisasContext *ctx, arg_V6_vsubhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubhsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubhsat_dv(DisasContext *ctx, arg_V6_vsubhsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubhsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vaddwsat(DisasContext *ctx, arg_V6_vaddwsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddwsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddwsat_dv(DisasContext *ctx, arg_V6_vaddwsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddwsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vsubwsat(DisasContext *ctx, arg_V6_vsubwsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubwsat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubwsat_dv(DisasContext *ctx, arg_V6_vsubwsat_dv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubwsat_dv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vavgub(DisasContext *ctx, arg_V6_vavgub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavgub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavgubrnd(DisasContext *ctx, arg_V6_vavgubrnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavgubrnd;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavguh(DisasContext *ctx, arg_V6_vavguh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavguh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavguhrnd(DisasContext *ctx, arg_V6_vavguhrnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavguhrnd;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavguw(DisasContext *ctx, arg_V6_vavguw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavguw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavguwrnd(DisasContext *ctx, arg_V6_vavguwrnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavguwrnd;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavgb(DisasContext *ctx, arg_V6_vavgb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavgb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavgbrnd(DisasContext *ctx, arg_V6_vavgbrnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavgbrnd;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vnavgb(DisasContext *ctx, arg_V6_vnavgb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnavgb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavgh(DisasContext *ctx, arg_V6_vavgh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavgh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavghrnd(DisasContext *ctx, arg_V6_vavghrnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavghrnd;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vnavgh(DisasContext *ctx, arg_V6_vnavgh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnavgh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavgw(DisasContext *ctx, arg_V6_vavgw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavgw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vavgwrnd(DisasContext *ctx, arg_V6_vavgwrnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vavgwrnd;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vnavgw(DisasContext *ctx, arg_V6_vnavgw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnavgw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vabsdiffub(DisasContext *ctx, arg_V6_vabsdiffub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsdiffub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vabsdiffuh(DisasContext *ctx, arg_V6_vabsdiffuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsdiffuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vabsdiffh(DisasContext *ctx, arg_V6_vabsdiffh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsdiffh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vabsdiffw(DisasContext *ctx, arg_V6_vabsdiffw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsdiffw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vnavgub(DisasContext *ctx, arg_V6_vnavgub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnavgub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddcarrysat(DisasContext *ctx, arg_V6_vaddcarrysat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddcarrysat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Qs;
    return true;
}
static bool trans_V6_vaddcarry(DisasContext *ctx, arg_V6_vaddcarry *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddcarry;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Qx;
    return true;
}
static bool trans_V6_vsubcarry(DisasContext *ctx, arg_V6_vsubcarry *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubcarry;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Qx;
    return true;
}
static bool trans_V6_vaddcarryo(DisasContext *ctx, arg_V6_vaddcarryo *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddcarryo;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qe;
    insn->regno[2] = args->Vu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vsubcarryo(DisasContext *ctx, arg_V6_vsubcarryo *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubcarryo;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qe;
    insn->regno[2] = args->Vu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vsatdw(DisasContext *ctx, arg_V6_vsatdw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsatdw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddububb_sat(DisasContext *ctx, arg_V6_vaddububb_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddububb_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubububb_sat(DisasContext *ctx, arg_V6_vsubububb_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubububb_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddubh(DisasContext *ctx, arg_V6_vaddubh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddubh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsububh(DisasContext *ctx, arg_V6_vsububh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsububh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddhw(DisasContext *ctx, arg_V6_vaddhw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddhw;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubhw(DisasContext *ctx, arg_V6_vsubhw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubhw;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vadduhw(DisasContext *ctx, arg_V6_vadduhw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vadduhw;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsubuhw(DisasContext *ctx, arg_V6_vsubuhw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubuhw;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddhw_acc(DisasContext *ctx, arg_V6_vaddhw_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddhw_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vadduhw_acc(DisasContext *ctx, arg_V6_vadduhw_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vadduhw_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddubh_acc(DisasContext *ctx, arg_V6_vaddubh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddubh_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddbq(DisasContext *ctx, arg_V6_vaddbq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddbq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vsubbq(DisasContext *ctx, arg_V6_vsubbq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubbq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vaddbnq(DisasContext *ctx, arg_V6_vaddbnq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddbnq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vsubbnq(DisasContext *ctx, arg_V6_vsubbnq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubbnq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vaddhq(DisasContext *ctx, arg_V6_vaddhq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddhq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vsubhq(DisasContext *ctx, arg_V6_vsubhq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubhq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vaddhnq(DisasContext *ctx, arg_V6_vaddhnq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddhnq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vsubhnq(DisasContext *ctx, arg_V6_vsubhnq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubhnq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vaddwq(DisasContext *ctx, arg_V6_vaddwq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddwq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vsubwq(DisasContext *ctx, arg_V6_vsubwq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubwq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vaddwnq(DisasContext *ctx, arg_V6_vaddwnq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddwnq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vsubwnq(DisasContext *ctx, arg_V6_vsubwnq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsubwnq;
    insn->regno[0] = args->Qv;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vabsb(DisasContext *ctx, arg_V6_vabsb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vabsb_sat(DisasContext *ctx, arg_V6_vabsb_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsb_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vabsh(DisasContext *ctx, arg_V6_vabsh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vabsh_sat(DisasContext *ctx, arg_V6_vabsh_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsh_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vabsw(DisasContext *ctx, arg_V6_vabsw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vabsw_sat(DisasContext *ctx, arg_V6_vabsw_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vabsw_sat;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vmpybv(DisasContext *ctx, arg_V6_vmpybv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpybv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpybv_acc(DisasContext *ctx, arg_V6_vmpybv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpybv_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyubv(DisasContext *ctx, arg_V6_vmpyubv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyubv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyubv_acc(DisasContext *ctx, arg_V6_vmpyubv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyubv_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpybusv(DisasContext *ctx, arg_V6_vmpybusv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpybusv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpybusv_acc(DisasContext *ctx, arg_V6_vmpybusv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpybusv_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpabusv(DisasContext *ctx, arg_V6_vmpabusv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpabusv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vmpabuuv(DisasContext *ctx, arg_V6_vmpabuuv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpabuuv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vmpyhv(DisasContext *ctx, arg_V6_vmpyhv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyhv_acc(DisasContext *ctx, arg_V6_vmpyhv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhv_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyuhv(DisasContext *ctx, arg_V6_vmpyuhv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyuhv;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyuhv_acc(DisasContext *ctx, arg_V6_vmpyuhv_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyuhv_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyhvsrs(DisasContext *ctx, arg_V6_vmpyhvsrs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhvsrs;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyuhvs(DisasContext *ctx, arg_V6_vmpyuhvs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyuhvs;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyhus(DisasContext *ctx, arg_V6_vmpyhus *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhus;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyhus_acc(DisasContext *ctx, arg_V6_vmpyhus_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhus_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyih(DisasContext *ctx, arg_V6_vmpyih *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyih;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyih_acc(DisasContext *ctx, arg_V6_vmpyih_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyih_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyewuh(DisasContext *ctx, arg_V6_vmpyewuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyewuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyowh(DisasContext *ctx, arg_V6_vmpyowh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyowh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyowh_rnd(DisasContext *ctx, arg_V6_vmpyowh_rnd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyowh_rnd;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyewuh_64(DisasContext *ctx, arg_V6_vmpyewuh_64 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyewuh_64;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyowh_64_acc(DisasContext *ctx, arg_V6_vmpyowh_64_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyowh_64_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyowh_sacc(DisasContext *ctx, arg_V6_vmpyowh_sacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyowh_sacc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyowh_rnd_sacc(DisasContext *ctx, arg_V6_vmpyowh_rnd_sacc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyowh_rnd_sacc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyieoh(DisasContext *ctx, arg_V6_vmpyieoh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyieoh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyiewuh(DisasContext *ctx, arg_V6_vmpyiewuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiewuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyiowh(DisasContext *ctx, arg_V6_vmpyiowh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiowh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyiewh_acc(DisasContext *ctx, arg_V6_vmpyiewh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiewh_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyiewuh_acc(DisasContext *ctx, arg_V6_vmpyiewuh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiewuh_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmpyub(DisasContext *ctx, arg_V6_vmpyub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyub;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyub_acc(DisasContext *ctx, arg_V6_vmpyub_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyub_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpybus(DisasContext *ctx, arg_V6_vmpybus *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpybus;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpybus_acc(DisasContext *ctx, arg_V6_vmpybus_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpybus_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpabus(DisasContext *ctx, arg_V6_vmpabus *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpabus;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpabus_acc(DisasContext *ctx, arg_V6_vmpabus_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpabus_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpabuu(DisasContext *ctx, arg_V6_vmpabuu *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpabuu;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpabuu_acc(DisasContext *ctx, arg_V6_vmpabuu_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpabuu_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpahb(DisasContext *ctx, arg_V6_vmpahb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpahb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpahb_acc(DisasContext *ctx, arg_V6_vmpahb_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpahb_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpauhb(DisasContext *ctx, arg_V6_vmpauhb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpauhb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpauhb_acc(DisasContext *ctx, arg_V6_vmpauhb_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpauhb_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyh(DisasContext *ctx, arg_V6_vmpyh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyh_acc(DisasContext *ctx, arg_V6_vmpyh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyh_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyhsat_acc(DisasContext *ctx, arg_V6_vmpyhsat_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhsat_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyhss(DisasContext *ctx, arg_V6_vmpyhss *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhss;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyhsrs(DisasContext *ctx, arg_V6_vmpyhsrs *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyhsrs;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyuh(DisasContext *ctx, arg_V6_vmpyuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyuh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyuh_acc(DisasContext *ctx, arg_V6_vmpyuh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyuh_acc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyihb(DisasContext *ctx, arg_V6_vmpyihb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyihb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyihb_acc(DisasContext *ctx, arg_V6_vmpyihb_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyihb_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyiwb(DisasContext *ctx, arg_V6_vmpyiwb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiwb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyiwb_acc(DisasContext *ctx, arg_V6_vmpyiwb_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiwb_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyiwub(DisasContext *ctx, arg_V6_vmpyiwub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiwub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyiwub_acc(DisasContext *ctx, arg_V6_vmpyiwub_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiwub_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyiwh(DisasContext *ctx, arg_V6_vmpyiwh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiwh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyiwh_acc(DisasContext *ctx, arg_V6_vmpyiwh_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyiwh_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vand(DisasContext *ctx, arg_V6_vand *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vand;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vor(DisasContext *ctx, arg_V6_vor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vor;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vxor(DisasContext *ctx, arg_V6_vxor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vxor;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vnot(DisasContext *ctx, arg_V6_vnot *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnot;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vandqrt(DisasContext *ctx, arg_V6_vandqrt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandqrt;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vandqrt_acc(DisasContext *ctx, arg_V6_vandqrt_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandqrt_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Qu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vandnqrt(DisasContext *ctx, arg_V6_vandnqrt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandnqrt;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vandnqrt_acc(DisasContext *ctx, arg_V6_vandnqrt_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandnqrt_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Qu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vandvrt(DisasContext *ctx, arg_V6_vandvrt *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandvrt;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vandvrt_acc(DisasContext *ctx, arg_V6_vandvrt_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandvrt_acc;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vandvqv(DisasContext *ctx, arg_V6_vandvqv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandvqv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qv;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vandvnqv(DisasContext *ctx, arg_V6_vandvnqv *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vandvnqv;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qv;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vgtw(DisasContext *ctx, arg_V6_vgtw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtw;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtw_and(DisasContext *ctx, arg_V6_vgtw_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtw_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtw_or(DisasContext *ctx, arg_V6_vgtw_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtw_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtw_xor(DisasContext *ctx, arg_V6_vgtw_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtw_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqw(DisasContext *ctx, arg_V6_veqw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqw;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqw_and(DisasContext *ctx, arg_V6_veqw_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqw_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqw_or(DisasContext *ctx, arg_V6_veqw_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqw_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqw_xor(DisasContext *ctx, arg_V6_veqw_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqw_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgth(DisasContext *ctx, arg_V6_vgth *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgth;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgth_and(DisasContext *ctx, arg_V6_vgth_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgth_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgth_or(DisasContext *ctx, arg_V6_vgth_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgth_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgth_xor(DisasContext *ctx, arg_V6_vgth_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgth_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqh(DisasContext *ctx, arg_V6_veqh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqh;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqh_and(DisasContext *ctx, arg_V6_veqh_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqh_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqh_or(DisasContext *ctx, arg_V6_veqh_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqh_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqh_xor(DisasContext *ctx, arg_V6_veqh_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqh_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtb(DisasContext *ctx, arg_V6_vgtb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtb;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtb_and(DisasContext *ctx, arg_V6_vgtb_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtb_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtb_or(DisasContext *ctx, arg_V6_vgtb_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtb_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtb_xor(DisasContext *ctx, arg_V6_vgtb_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtb_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqb(DisasContext *ctx, arg_V6_veqb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqb;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqb_and(DisasContext *ctx, arg_V6_veqb_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqb_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqb_or(DisasContext *ctx, arg_V6_veqb_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqb_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_veqb_xor(DisasContext *ctx, arg_V6_veqb_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_veqb_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuw(DisasContext *ctx, arg_V6_vgtuw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuw;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuw_and(DisasContext *ctx, arg_V6_vgtuw_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuw_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuw_or(DisasContext *ctx, arg_V6_vgtuw_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuw_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuw_xor(DisasContext *ctx, arg_V6_vgtuw_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuw_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuh(DisasContext *ctx, arg_V6_vgtuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuh;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuh_and(DisasContext *ctx, arg_V6_vgtuh_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuh_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuh_or(DisasContext *ctx, arg_V6_vgtuh_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuh_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtuh_xor(DisasContext *ctx, arg_V6_vgtuh_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtuh_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtub(DisasContext *ctx, arg_V6_vgtub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtub;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtub_and(DisasContext *ctx, arg_V6_vgtub_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtub_and;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtub_or(DisasContext *ctx, arg_V6_vgtub_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtub_or;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgtub_xor(DisasContext *ctx, arg_V6_vgtub_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgtub_xor;
    insn->regno[0] = args->Qx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_pred_scalar2(DisasContext *ctx, arg_V6_pred_scalar2 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_scalar2;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_V6_pred_scalar2v2(DisasContext *ctx, arg_V6_pred_scalar2v2 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_scalar2v2;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_V6_shuffeqw(DisasContext *ctx, arg_V6_shuffeqw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_shuffeqw;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    insn->regno[2] = args->Qt;
    return true;
}
static bool trans_V6_shuffeqh(DisasContext *ctx, arg_V6_shuffeqh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_shuffeqh;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    insn->regno[2] = args->Qt;
    return true;
}
static bool trans_V6_pred_or(DisasContext *ctx, arg_V6_pred_or *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_or;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    insn->regno[2] = args->Qt;
    return true;
}
static bool trans_V6_pred_and(DisasContext *ctx, arg_V6_pred_and *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_and;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    insn->regno[2] = args->Qt;
    return true;
}
static bool trans_V6_pred_xor(DisasContext *ctx, arg_V6_pred_xor *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_xor;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    insn->regno[2] = args->Qt;
    return true;
}
static bool trans_V6_pred_or_n(DisasContext *ctx, arg_V6_pred_or_n *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_or_n;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    insn->regno[2] = args->Qt;
    return true;
}
static bool trans_V6_pred_and_n(DisasContext *ctx, arg_V6_pred_and_n *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_and_n;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    insn->regno[2] = args->Qt;
    return true;
}
static bool trans_V6_pred_not(DisasContext *ctx, arg_V6_pred_not *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_pred_not;
    insn->regno[0] = args->Qd;
    insn->regno[1] = args->Qs;
    return true;
}
static bool trans_V6_vcmov(DisasContext *ctx, arg_V6_vcmov *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vcmov;
    insn->regno[0] = args->Ps;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vncmov(DisasContext *ctx, arg_V6_vncmov *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vncmov;
    insn->regno[0] = args->Ps;
    insn->regno[1] = args->Vd;
    insn->regno[2] = args->Vu;
    return true;
}
static bool trans_V6_vccombine(DisasContext *ctx, arg_V6_vccombine *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vccombine;
    insn->regno[0] = args->Ps;
    insn->regno[1] = args->Vdd;
    insn->regno[2] = args->Vu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vnccombine(DisasContext *ctx, arg_V6_vnccombine *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnccombine;
    insn->regno[0] = args->Ps;
    insn->regno[1] = args->Vdd;
    insn->regno[2] = args->Vu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vmux(DisasContext *ctx, arg_V6_vmux *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmux;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qt;
    insn->regno[2] = args->Vu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vswap(DisasContext *ctx, arg_V6_vswap *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vswap;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Qt;
    insn->regno[2] = args->Vu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vmaxb(DisasContext *ctx, arg_V6_vmaxb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmaxb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vminb(DisasContext *ctx, arg_V6_vminb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vminb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmaxub(DisasContext *ctx, arg_V6_vmaxub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmaxub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vminub(DisasContext *ctx, arg_V6_vminub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vminub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmaxuh(DisasContext *ctx, arg_V6_vmaxuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmaxuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vminuh(DisasContext *ctx, arg_V6_vminuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vminuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmaxh(DisasContext *ctx, arg_V6_vmaxh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmaxh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vminh(DisasContext *ctx, arg_V6_vminh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vminh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vmaxw(DisasContext *ctx, arg_V6_vmaxw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmaxw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vminw(DisasContext *ctx, arg_V6_vminw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vminw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsathub(DisasContext *ctx, arg_V6_vsathub *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsathub;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsatwh(DisasContext *ctx, arg_V6_vsatwh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsatwh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vsatuwuh(DisasContext *ctx, arg_V6_vsatuwuh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vsatuwuh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vshuffeb(DisasContext *ctx, arg_V6_vshuffeb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshuffeb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vshuffob(DisasContext *ctx, arg_V6_vshuffob *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshuffob;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vshufeh(DisasContext *ctx, arg_V6_vshufeh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshufeh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vshufoh(DisasContext *ctx, arg_V6_vshufoh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshufoh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vshuff(DisasContext *ctx, arg_V6_vshuff *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshuff;
    insn->regno[0] = args->Vy;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vshuffvdd(DisasContext *ctx, arg_V6_vshuffvdd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshuffvdd;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vdeal(DisasContext *ctx, arg_V6_vdeal *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdeal;
    insn->regno[0] = args->Vy;
    insn->regno[1] = args->Vx;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vdealvdd(DisasContext *ctx, arg_V6_vdealvdd *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdealvdd;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vshufoeh(DisasContext *ctx, arg_V6_vshufoeh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshufoeh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vshufoeb(DisasContext *ctx, arg_V6_vshufoeb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshufoeb;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vdealh(DisasContext *ctx, arg_V6_vdealh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdealh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vdealb(DisasContext *ctx, arg_V6_vdealb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdealb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vdealb4w(DisasContext *ctx, arg_V6_vdealb4w *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdealb4w;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vshuffh(DisasContext *ctx, arg_V6_vshuffh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshuffh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vshuffb(DisasContext *ctx, arg_V6_vshuffb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vshuffb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_extractw(DisasContext *ctx, arg_V6_extractw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_extractw;
    insn->regno[0] = args->Rd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rs;
    return true;
}
static bool trans_V6_vinsertwr(DisasContext *ctx, arg_V6_vinsertwr *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vinsertwr;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_V6_lvsplatw(DisasContext *ctx, arg_V6_lvsplatw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_lvsplatw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_V6_lvsplath(DisasContext *ctx, arg_V6_lvsplath *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_lvsplath;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_V6_lvsplatb(DisasContext *ctx, arg_V6_lvsplatb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_lvsplatb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Rt;
    return true;
}
static bool trans_V6_vassign(DisasContext *ctx, arg_V6_vassign *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vassign;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vcombine(DisasContext *ctx, arg_V6_vcombine *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vcombine;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vcombine_tmp(DisasContext *ctx, arg_V6_vcombine_tmp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vcombine_tmp;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vassign_tmp(DisasContext *ctx, arg_V6_vassign_tmp *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vassign_tmp;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vdelta(DisasContext *ctx, arg_V6_vdelta *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vdelta;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vrdelta(DisasContext *ctx, arg_V6_vrdelta *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vrdelta;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vcl0w(DisasContext *ctx, arg_V6_vcl0w *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vcl0w;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vcl0h(DisasContext *ctx, arg_V6_vcl0h *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vcl0h;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vnormamtw(DisasContext *ctx, arg_V6_vnormamtw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnormamtw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vnormamth(DisasContext *ctx, arg_V6_vnormamth *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vnormamth;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vaddclbw(DisasContext *ctx, arg_V6_vaddclbw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddclbw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vaddclbh(DisasContext *ctx, arg_V6_vaddclbh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vaddclbh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vpopcounth(DisasContext *ctx, arg_V6_vpopcounth *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vpopcounth;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    return true;
}
static bool trans_V6_vhist(DisasContext *ctx, arg_V6_vhist *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vhist;
    return true;
}
static bool trans_V6_vhistq(DisasContext *ctx, arg_V6_vhistq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vhistq;
    insn->regno[0] = args->Qv;
    return true;
}
static bool trans_V6_vwhist256(DisasContext *ctx, arg_V6_vwhist256 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist256;
    return true;
}
static bool trans_V6_vwhist256q(DisasContext *ctx, arg_V6_vwhist256q *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist256q;
    insn->regno[0] = args->Qv;
    return true;
}
static bool trans_V6_vwhist256_sat(DisasContext *ctx, arg_V6_vwhist256_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist256_sat;
    return true;
}
static bool trans_V6_vwhist256q_sat(DisasContext *ctx, arg_V6_vwhist256q_sat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist256q_sat;
    insn->regno[0] = args->Qv;
    return true;
}
static bool trans_V6_vwhist128(DisasContext *ctx, arg_V6_vwhist128 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist128;
    return true;
}
static bool trans_V6_vwhist128q(DisasContext *ctx, arg_V6_vwhist128q *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist128q;
    insn->regno[0] = args->Qv;
    return true;
}
static bool trans_V6_vwhist128m(DisasContext *ctx, arg_V6_vwhist128m *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist128m;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vwhist128qm(DisasContext *ctx, arg_V6_vwhist128qm *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vwhist128qm;
    insn->regno[0] = args->Qv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vlutvvb(DisasContext *ctx, arg_V6_vlutvvb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvvb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vlutvvb_oracc(DisasContext *ctx, arg_V6_vlutvvb_oracc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvvb_oracc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vlutvwh(DisasContext *ctx, arg_V6_vlutvwh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvwh;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vlutvwh_oracc(DisasContext *ctx, arg_V6_vlutvwh_oracc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvwh_oracc;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vlutvvbi(DisasContext *ctx, arg_V6_vlutvvbi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvvbi;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vlutvvb_oracci(DisasContext *ctx, arg_V6_vlutvvb_oracci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvvb_oracci;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vlutvwhi(DisasContext *ctx, arg_V6_vlutvwhi *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvwhi;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vlutvwh_oracci(DisasContext *ctx, arg_V6_vlutvwh_oracci *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvwh_oracci;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vlutvvb_nm(DisasContext *ctx, arg_V6_vlutvvb_nm *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvvb_nm;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vlutvwh_nm(DisasContext *ctx, arg_V6_vlutvwh_nm *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlutvwh_nm;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Rt;
    return true;
}
static bool trans_V6_vmpahhsat(DisasContext *ctx, arg_V6_vmpahhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpahhsat;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_V6_vmpauhuhsat(DisasContext *ctx, arg_V6_vmpauhuhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpauhuhsat;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_V6_vmpsuhuhsat(DisasContext *ctx, arg_V6_vmpsuhuhsat *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpsuhuhsat;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_V6_vlut4(DisasContext *ctx, arg_V6_vlut4 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vlut4;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rtt;
    return true;
}
static bool trans_V6_vmpyuhe(DisasContext *ctx, arg_V6_vmpyuhe *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyuhe;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vmpyuhe_acc(DisasContext *ctx, arg_V6_vmpyuhe_acc *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vmpyuhe_acc;
    insn->regno[0] = args->Vx;
    insn->regno[1] = args->Vu;
    insn->regno[2] = args->Rt;
    return true;
}
static bool trans_V6_vgathermw(DisasContext *ctx, arg_V6_vgathermw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgathermw;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgathermh(DisasContext *ctx, arg_V6_vgathermh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgathermh;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vv;
    return true;
}
static bool trans_V6_vgathermhw(DisasContext *ctx, arg_V6_vgathermhw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgathermhw;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vvv;
    return true;
}
static bool trans_V6_vgathermwq(DisasContext *ctx, arg_V6_vgathermwq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgathermwq;
    insn->regno[0] = args->Qs;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vgathermhq(DisasContext *ctx, arg_V6_vgathermhq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgathermhq;
    insn->regno[0] = args->Qs;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vv;
    return true;
}
static bool trans_V6_vgathermhwq(DisasContext *ctx, arg_V6_vgathermhwq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vgathermhwq;
    insn->regno[0] = args->Qs;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vvv;
    return true;
}
static bool trans_V6_vscattermw(DisasContext *ctx, arg_V6_vscattermw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermw;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Vw;
    return true;
}
static bool trans_V6_vscattermh(DisasContext *ctx, arg_V6_vscattermh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermh;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Vw;
    return true;
}
static bool trans_V6_vscattermw_add(DisasContext *ctx, arg_V6_vscattermw_add *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermw_add;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Vw;
    return true;
}
static bool trans_V6_vscattermh_add(DisasContext *ctx, arg_V6_vscattermh_add *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermh_add;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vv;
    insn->regno[3] = args->Vw;
    return true;
}
static bool trans_V6_vscattermwq(DisasContext *ctx, arg_V6_vscattermwq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermwq;
    insn->regno[0] = args->Qs;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vv;
    insn->regno[4] = args->Vw;
    return true;
}
static bool trans_V6_vscattermhq(DisasContext *ctx, arg_V6_vscattermhq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermhq;
    insn->regno[0] = args->Qs;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vv;
    insn->regno[4] = args->Vw;
    return true;
}
static bool trans_V6_vscattermhw(DisasContext *ctx, arg_V6_vscattermhw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermhw;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vvv;
    insn->regno[3] = args->Vw;
    return true;
}
static bool trans_V6_v6mpyvubs10_vxx(DisasContext *ctx, arg_V6_v6mpyvubs10_vxx *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_v6mpyvubs10_vxx;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_v6mpyhubs10_vxx(DisasContext *ctx, arg_V6_v6mpyhubs10_vxx *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_v6mpyhubs10_vxx;
    insn->regno[0] = args->Vxx;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_v6mpyvubs10(DisasContext *ctx, arg_V6_v6mpyvubs10 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_v6mpyvubs10;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_v6mpyhubs10(DisasContext *ctx, arg_V6_v6mpyhubs10 *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_v6mpyhubs10;
    insn->regno[0] = args->Vdd;
    insn->regno[1] = args->Vuu;
    insn->regno[2] = args->Vvv;
    insn->immed[0] = args->ui;
    return true;
}
static bool trans_V6_vscattermhwq(DisasContext *ctx, arg_V6_vscattermhwq *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermhwq;
    insn->regno[0] = args->Qs;
    insn->regno[1] = args->Rt;
    insn->regno[2] = args->Mu;
    insn->regno[3] = args->Vvv;
    insn->regno[4] = args->Vw;
    return true;
}
static bool trans_V6_vscattermhw_add(DisasContext *ctx, arg_V6_vscattermhw_add *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vscattermhw_add;
    insn->regno[0] = args->Rt;
    insn->regno[1] = args->Mu;
    insn->regno[2] = args->Vvv;
    insn->regno[3] = args->Vw;
    return true;
}
static bool trans_V6_vprefixqb(DisasContext *ctx, arg_V6_vprefixqb *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vprefixqb;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qv;
    return true;
}
static bool trans_V6_vprefixqh(DisasContext *ctx, arg_V6_vprefixqh *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vprefixqh;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qv;
    return true;
}
static bool trans_V6_vprefixqw(DisasContext *ctx, arg_V6_vprefixqw *args)
{
    Insn *insn = ctx->insn;
    insn->opcode = V6_vprefixqw;
    insn->regno[0] = args->Vd;
    insn->regno[1] = args->Qv;
    return true;
}
